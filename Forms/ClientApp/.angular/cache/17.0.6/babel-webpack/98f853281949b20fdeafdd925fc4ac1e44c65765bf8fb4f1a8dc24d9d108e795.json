{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthGuard {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    return this.authService.isLoggedIn();\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","canActivate","route","state","isLoggedIn","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac","providedIn"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/services/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.authService.isLoggedIn();\n    }\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,OAAO,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE;EACpC;EAAC,QAAAC,CAAA,G;qBAPQP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATZ,SAAS;IAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;IAAAC,UAAA,EAJR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}