{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet PasswordResetComponent = class PasswordResetComponent {\n  ngOnInit() {}\n  constructor(authService, router, resetserv) {\n    this.authService = authService;\n    this.router = router;\n    this.resetserv = resetserv;\n    this.isUserValid = false;\n    this.loginfrm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      pwd: new FormControl('', [Validators.required])\n    });\n  }\n  get email() {\n    return this.loginfrm.get(\"email\");\n  }\n  get pwd() {\n    return this.loginfrm.get(\"pwd\");\n  }\n  loginSubmit() {\n    this.authService.loginStudent([this.loginfrm.value.email, this.loginfrm.value.pwd]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n      } else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        this.ress = this.authService.loadCurrentUser();\n        if (this.ress.role == \"Admin\") {\n          this.router.navigateByUrl('/signin/courses');\n        }\n      }\n    });\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    this.isValid = pattern.test(value);\n    return this.isValid;\n  }\n  confirm() {\n    console.log(this.resetPassword);\n    this.resetserv.sendResetpasswordLink(this.resetPassword).subscribe({\n      next: res => {\n        alert(\"Success\");\n        this.resetPassword = \"\";\n        const btn = document.getElementById(\"closebtn\");\n        btn.dispatchEvent(new Event('click'));\n      },\n      error: err => {\n        alert(\"error\");\n      }\n    });\n  }\n};\nPasswordResetComponent = __decorate([Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})], PasswordResetComponent);\nexport { PasswordResetComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","PasswordResetComponent","ngOnInit","constructor","authService","router","resetserv","isUserValid","loginfrm","email","required","pwd","get","loginSubmit","loginStudent","value","subscribe","res","alert","setToken","ress","loadCurrentUser","role","navigateByUrl","checkValidEmail","event","pattern","isValid","test","confirm","console","log","resetPassword","sendResetpasswordLink","next","btn","document","getElementById","dispatchEvent","Event","error","err","__decorate","selector","templateUrl","styleUrl"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/password-reset/password-reset.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { ResetPasswordService } from '../services/reset-password.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n\n  isUserValid: boolean = false;\n  ress: any;\n  resetPassword: string;\n  isValid: boolean;\n\n  ngOnInit() {\n\n  }\n  constructor(private authService: AuthService, private router: Router, private resetserv: ResetPasswordService) { }\n\n  loginfrm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    pwd: new FormControl('', [Validators.required])\n  });\n\n  get email() {\n    return this.loginfrm.get(\"email\");\n  }\n\n  get pwd() {\n    return this.loginfrm.get(\"pwd\");\n  }\n\n\n\n  loginSubmit() {\n    this.authService.loginStudent([\n      this.loginfrm.value.email,\n      this.loginfrm.value.pwd\n    ]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n\n      }\n      else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        this.ress = this.authService.loadCurrentUser();\n        if (this.ress.role == \"Admin\") {\n          this.router.navigateByUrl('/signin/courses');\n        }\n      }\n    });\n\n  }\n\n  checkValidEmail(event: string) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    this.isValid = pattern.test(value);\n    return this.isValid\n\n  }\n\n  confirm() {\n    console.log(this.resetPassword);\n\n    this.resetserv.sendResetpasswordLink(this.resetPassword)\n      .subscribe({\n        next: (res) => {\n          alert(\"Success\");\n          this.resetPassword = \"\";\n          const btn = document.getElementById(\"closebtn\");\n          btn.dispatchEvent(new Event('click'));\n        },\n        error: (err) => {\n          alert(\"error\");\n        }\n      });\n  }\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,QAAQA,CAAA,GAER;EACAC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,SAA+B;IAAzF,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,SAAS,GAATA,SAAS;IARvF,KAAAC,WAAW,GAAY,KAAK;IAU5B,KAAAC,QAAQ,GAAG,IAAIT,SAAS,CAAC;MACvBU,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACnEE,GAAG,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACU,QAAQ,CAAC;KAC/C,CAAC;EAL+G;EAOjH,IAAID,KAAKA,CAAA;IACP,OAAO,IAAI,CAACD,QAAQ,CAACI,GAAG,CAAC,OAAO,CAAC;EACnC;EAEA,IAAID,GAAGA,CAAA;IACL,OAAO,IAAI,CAACH,QAAQ,CAACI,GAAG,CAAC,KAAK,CAAC;EACjC;EAIAC,WAAWA,CAAA;IACT,IAAI,CAACT,WAAW,CAACU,YAAY,CAAC,CAC5B,IAAI,CAACN,QAAQ,CAACO,KAAK,CAACN,KAAK,EACzB,IAAI,CAACD,QAAQ,CAACO,KAAK,CAACJ,GAAG,CACxB,CAAC,CAACK,SAAS,CAACC,GAAG,IAAG;MACjB,IAAIA,GAAG,IAAI,SAAS,EAAE;QACpB,IAAI,CAACV,WAAW,GAAG,KAAK;QACxBW,KAAK,CAAC,oBAAoB,CAAC;OAE5B,MACI;QACH,IAAI,CAACX,WAAW,GAAG,IAAI;QACvB,IAAI,CAACH,WAAW,CAACe,QAAQ,CAACF,GAAG,CAAC;QAC9B,IAAI,CAACG,IAAI,GAAG,IAAI,CAAChB,WAAW,CAACiB,eAAe,EAAE;QAC9C,IAAI,IAAI,CAACD,IAAI,CAACE,IAAI,IAAI,OAAO,EAAE;UAC7B,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,iBAAiB,CAAC;;;IAGlD,CAAC,CAAC;EAEJ;EAEAC,eAAeA,CAACC,KAAa;IAC3B,MAAMV,KAAK,GAAGU,KAAK;IACnB,MAAMC,OAAO,GAAG,kCAAkC;IAClD,IAAI,CAACC,OAAO,GAAGD,OAAO,CAACE,IAAI,CAACb,KAAK,CAAC;IAClC,OAAO,IAAI,CAACY,OAAO;EAErB;EAEAE,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,aAAa,CAAC;IAE/B,IAAI,CAAC1B,SAAS,CAAC2B,qBAAqB,CAAC,IAAI,CAACD,aAAa,CAAC,CACrDhB,SAAS,CAAC;MACTkB,IAAI,EAAGjB,GAAG,IAAI;QACZC,KAAK,CAAC,SAAS,CAAC;QAChB,IAAI,CAACc,aAAa,GAAG,EAAE;QACvB,MAAMG,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;QAC/CF,GAAG,CAACG,aAAa,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;MACvC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbvB,KAAK,CAAC,OAAO,CAAC;MAChB;KACD,CAAC;EACN;CACD;AAzEYjB,sBAAsB,GAAAyC,UAAA,EALlC7C,SAAS,CAAC;EACT8C,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,QAAQ,EAAE;CACX,CAAC,C,EACW5C,sBAAsB,CAyElC"},"metadata":{},"sourceType":"module","externalDependencies":[]}