{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../nav-menu/nav-menu.component\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Invalid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Password Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  ngOnInit() {}\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.isUserValid = false;\n    this.loginfrm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      pwd: new FormControl('', [Validators.required])\n    });\n  }\n  get email() {\n    return this.loginfrm.get(\"email\");\n  }\n  get pwd() {\n    return this.loginfrm.get(\"pwd\");\n  }\n  loginSubmit() {\n    this.authService.loginStudent([this.loginfrm.value.email, this.loginfrm.value.pwd]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n      } else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        if (res.role == \"Admin\") {\n          this.router.navigateByUrl('/signin');\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 4,\n    consts: [[1, \"border\", \"p-3\", \"rounded-3\", \"perfect-centering\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"col\", \"mb-3\"], [\"for\", \"email\", 1, \"form=label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"pwd\", 1, \"form=label\"], [\"type\", \"pwd\", \"id\", \"pwd\", \"formControlName\", \"pwd\", 1, \"form-control\"], [\"routerLink\", \"/\"], [1, \"row\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form-text\", \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-menu\");\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.loginSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"span\", 3);\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 4)(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"div\", 4)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"div\", 4)(20, \"label\", 8)(21, \"a\", 10);\n        i0.ɵɵtext(22, \"Forgot Password ?\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 12)(25, \"div\", 13)(26, \"button\", 14);\n        i0.ɵɵtext(27, \"Login \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginfrm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email.errors == null ? null : ctx.email.errors[\"required\"]) && (ctx.email.dirty || ctx.email.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"required\"]) && (ctx.pwd.dirty || ctx.pwd.touched));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.loginfrm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink, i5.NavMenuComponent],\n    styles: [\"form[_ngcontent-%COMP%]{\\n    width:500px;\\n}\\ninput.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: red 1px solid;\\n}\\n.perfect-centering[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%,-50%);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCwrQkFBK0I7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyJmb3Jte1xuICAgIHdpZHRoOjUwMHB4O1xufVxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiByZWQgMXB4IHNvbGlkO1xufVxuLnBlcmZlY3QtY2VudGVyaW5nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","ngOnInit","constructor","authService","router","isUserValid","loginfrm","email","required","pwd","get","loginSubmit","loginStudent","value","subscribe","res","alert","setToken","role","navigateByUrl","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","LoginComponent_div_11_Template","LoginComponent_div_17_Template","ɵɵadvance","ɵɵproperty","errors","dirty","touched","invalid"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/login/login.component.ts","/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isUserValid: boolean = false;\n\n  ngOnInit() {\n\n  }\n  constructor(private authService: AuthService, private router: Router) { }\n\n  loginfrm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    pwd: new FormControl('', [Validators.required])\n  });\n\n  get email() {\n    return this.loginfrm.get(\"email\");\n  }\n\n  get pwd() {\n    return this.loginfrm.get(\"pwd\");\n  }\n\n \n\n  loginSubmit() {\n    this.authService.loginStudent([\n      this.loginfrm.value.email,\n      this.loginfrm.value.pwd\n    ]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n          \n      }\n      else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        if (res.role == \"Admin\") {\n          this.router.navigateByUrl('/signin');\n        }\n      }\n    }); \n   \n  }\n}\n","<app-nav-menu></app-nav-menu>\n\n<form class=\"border p-3 rounded-3 perfect-centering\" [formGroup]=\"loginfrm\" (ngSubmit)=\"loginSubmit()\">\n    <div class=\"row g-0\">\n        <div class=\"col text-center p-2 mb-3 bg-light\">\n            <span class=\"fs-3\">Login</span>\n        </div>\n    </div>\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <label for=\"email\" class=\"form=label\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" />\n            <div class=\"form-text text-danger\" *ngIf=\"email.errors?.['required'] && (email.dirty || email.touched)\">\n                Invalid Email\n            </div>\n        </div>\n    </div>\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <label for=\"pwd\" class=\"form=label\">Password</label>\n            <input type=\"pwd\" class=\"form-control\" id=\"pwd\" formControlName=\"pwd\" />\n            <div class=\"form-text text-danger\" *ngIf=\"pwd.errors?.['required'] && (pwd.dirty || pwd.touched)\">\n                Password Required\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <label for=\"pwd\" class=\"form=label\"><a routerLink=\"/\">Forgot Password ?</a></label>\n\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n            <div class=\"d-grid\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginfrm.invalid\">Login </button>\n            </div>\n        </div>\n    </div>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}