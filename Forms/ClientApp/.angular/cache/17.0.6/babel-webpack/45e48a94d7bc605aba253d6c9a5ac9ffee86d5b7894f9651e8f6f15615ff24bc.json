{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7118/api/';\n    this.currentUser = new BehaviorSubject(null);\n    this.jwtHelperService = new JwtHelperService();\n  }\n  registerStudent(student) {\n    return this.http.post(this.baseUrl + 'Student/send', {\n      firstname: student[0],\n      lastname: student[1],\n      email: student[2],\n      mobile: student[3],\n      pwd: student[4],\n      degree: student[5],\n      Studentid: student[6],\n      role: \"User\"\n    }, {\n      responseType: 'text'\n    });\n  }\n  updateStudent(student) {\n    return this.http.put(this.baseUrl + `Student/send/${student[3]}`, {\n      firstname: student[0],\n      lastname: student[1],\n      email: student[2],\n      mobile: student[4],\n      memberSince: student[5],\n      pwd: student[6],\n      degree: student[8],\n      Studentid: student[3],\n      role: student[7]\n    }, {\n      responseType: 'text'\n    });\n  }\n  loginStudent(loginInfo) {\n    return this.http.post(this.baseUrl + 'Student/loginUser', {\n      email: loginInfo[0],\n      pwd: loginInfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  loadCurrentUser() {\n    const tokenn = localStorage.getItem(\"access_token\");\n    const userInfo = tokenn != null ? this.jwtHelperService.decodeToken(tokenn) : null;\n    console.log(userInfo);\n    return userInfo;\n  }\n  setToken(token) {\n    localStorage.setItem(\"access_token\", token);\n    this.loadCurrentUser();\n  }\n  isLoggedIn() {\n    return localStorage.getItem(\"access_token\") ? true : false;\n  }\n  removeToken() {\n    localStorage.removeItem(\"access_token\");\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtHelperService","BehaviorSubject","AuthService","constructor","http","baseUrl","currentUser","jwtHelperService","registerStudent","student","post","firstname","lastname","email","mobile","pwd","degree","Studentid","role","responseType","updateStudent","put","memberSince","loginStudent","loginInfo","loadCurrentUser","tokenn","localStorage","getItem","userInfo","decodeToken","console","log","setToken","token","setItem","isLoggedIn","removeToken","removeItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Behavior } from 'popper.js';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  baseUrl = 'https://localhost:7118/api/';\n  currentUser: BehaviorSubject<any> = new BehaviorSubject(null);\n\n\n  jwtHelperService = new JwtHelperService();\n\n  registerStudent(student: Array<string>) {\n    return this.http.post(this.baseUrl + 'Student/send', {\n      firstname: student[0],\n      lastname: student[1],\n      email: student[2],\n      mobile: student[3],\n      pwd: student[4],\n      degree: student[5],\n      Studentid: student[6],\n      role:\"User\"\n    }, {\n      responseType:'text',\n    });\n  }\n  \n    updateStudent(student: Array<string>) {\n      return this.http.put(this.baseUrl + `Student/send/${student[3]}`, {\n        firstname: student[0],\n        lastname: student[1],\n        email: student[2],\n        mobile: student[4],\n        memberSince: student[5],\n        pwd: student[6],\n        degree: student[8],\n        Studentid: student[3],\n        role: student[7]\n      }, {\n        responseType: 'text'\n      });\n    }\n  \n  \n \n\n  loginStudent(loginInfo: Array<string>) {\n    return this.http.post(this.baseUrl + 'Student/loginUser', {\n      email: loginInfo[0],\n      pwd: loginInfo[1]\n    }, {\n      responseType: 'text',\n    });\n  }\n  loadCurrentUser() {\n    const tokenn = localStorage.getItem(\"access_token\");\n    const userInfo = tokenn != null ? this.jwtHelperService.decodeToken(tokenn) : null;\n    console.log(userInfo);\n    return userInfo;\n  }\n\n  setToken(token: string) {\n    localStorage.setItem(\"access_token\", token);\n    this.loadCurrentUser();\n  }\n  isLoggedIn(): boolean{\n    return localStorage.getItem(\"access_token\") ? true : false;\n  }\n\n  removeToken() {\n    localStorage.removeItem(\"access_token\");\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}