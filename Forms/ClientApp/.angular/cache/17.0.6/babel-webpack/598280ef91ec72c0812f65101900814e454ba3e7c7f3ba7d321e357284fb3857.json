{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CourseService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7118/api/';\n  }\n  addCourse(course) {\n    return this.http.post(this.baseUrl + \"Courses/send\", {\n      name: course[0],\n      code: course[1],\n      preRequirements: course[2],\n      department: course[3],\n      CourseSchedule: []\n    }, {\n      responseType: 'text'\n    });\n  }\n  getCourses() {\n    return this.http.get(this.baseUrl + \"Courses/get\");\n  }\n  deleteCourse(code) {\n    return this.http.delete(this.baseUrl + `Courses/delete/${code}`, {\n      responseType: 'text'\n    });\n  }\n  update(course) {\n    console.log(course);\n    return this.http.put(this.baseUrl + `Courses/${course[1]}`, {\n      name: course[0],\n      code: course[1],\n      preRequirements: course[2],\n      department: course[3],\n      CourseSchedule: []\n    }, {\n      responseType: 'text'\n    });\n  }\n  addSchedules(schedules) {\n    return this.http.post(this.baseUrl + \"Schedules/send\", {\n      name: schedules[0],\n      code: schedules[1],\n      day: schedules[2],\n      sTime: schedules[3],\n      eTime: schedules[4],\n      CourseSchedule: []\n    }, {\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function CourseService_Factory(t) {\n    return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CourseService,\n    factory: CourseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CourseService","constructor","http","baseUrl","addCourse","course","post","name","code","preRequirements","department","CourseSchedule","responseType","getCourses","get","deleteCourse","delete","update","console","log","put","addSchedules","schedules","day","sTime","eTime","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/services/course.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  constructor(private http: HttpClient) { }\n  baseUrl = 'https://localhost:7118/api/';\n\n  addCourse(course: Array<string>) {\n    return this.http.post(this.baseUrl + \"Courses/send\", {\n      name: course[0],\n      code: course[1],\n      preRequirements: course[2],\n      department: course[3],\n      CourseSchedule: []\n\n    }, {\n      responseType: 'text',\n    });\n    \n  }\n\n  getCourses() {\n    return this.http.get(this.baseUrl + \"Courses/get\");\n     \n  }\n\n  deleteCourse(code: string) {\n    return this.http.delete(this.baseUrl + `Courses/delete/${code}`, {\n      responseType: 'text',\n    });\n  }\n\n  update(course: Array<string>) {\n    console.log(course);\n    return this.http.put(this.baseUrl + `Courses/${course[1]}`, {\n      name: course[0],\n      code: course[1],\n      preRequirements: course[2],\n      department: course[3],\n      CourseSchedule:[]\n    }, {\n      responseType: 'text'\n    });\n  }\n\n\n  addSchedules(schedules: Array<string>) {\n    return this.http.post(this.baseUrl + \"Schedules/send\", {\n      name: schedules[0],\n      code: schedules[1],\n      day: schedules[2],\n      sTime: schedules[3],\n      eTime: schedules[4],\n      CourseSchedule: [];\n\n    }, {\n      responseType: 'text',\n    });\n\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,OAAO,GAAG,6BAA6B;EADC;EAGxCC,SAASA,CAACC,MAAqB;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAG,cAAc,EAAE;MACnDI,IAAI,EAAEF,MAAM,CAAC,CAAC,CAAC;MACfG,IAAI,EAAEH,MAAM,CAAC,CAAC,CAAC;MACfI,eAAe,EAAEJ,MAAM,CAAC,CAAC,CAAC;MAC1BK,UAAU,EAAEL,MAAM,CAAC,CAAC,CAAC;MACrBM,cAAc,EAAE;KAEjB,EAAE;MACDC,YAAY,EAAE;KACf,CAAC;EAEJ;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACX,OAAO,GAAG,aAAa,CAAC;EAEpD;EAEAY,YAAYA,CAACP,IAAY;IACvB,OAAO,IAAI,CAACN,IAAI,CAACc,MAAM,CAAC,IAAI,CAACb,OAAO,GAAG,kBAAkBK,IAAI,EAAE,EAAE;MAC/DI,YAAY,EAAE;KACf,CAAC;EACJ;EAEAK,MAAMA,CAACZ,MAAqB;IAC1Ba,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;IACnB,OAAO,IAAI,CAACH,IAAI,CAACkB,GAAG,CAAC,IAAI,CAACjB,OAAO,GAAG,WAAWE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;MAC1DE,IAAI,EAAEF,MAAM,CAAC,CAAC,CAAC;MACfG,IAAI,EAAEH,MAAM,CAAC,CAAC,CAAC;MACfI,eAAe,EAAEJ,MAAM,CAAC,CAAC,CAAC;MAC1BK,UAAU,EAAEL,MAAM,CAAC,CAAC,CAAC;MACrBM,cAAc,EAAC;KAChB,EAAE;MACDC,YAAY,EAAE;KACf,CAAC;EACJ;EAGAS,YAAYA,CAACC,SAAwB;IACnC,OAAO,IAAI,CAACpB,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAG,gBAAgB,EAAE;MACrDI,IAAI,EAAEe,SAAS,CAAC,CAAC,CAAC;MAClBd,IAAI,EAAEc,SAAS,CAAC,CAAC,CAAC;MAClBC,GAAG,EAAED,SAAS,CAAC,CAAC,CAAC;MACjBE,KAAK,EAAEF,SAAS,CAAC,CAAC,CAAC;MACnBG,KAAK,EAAEH,SAAS,CAAC,CAAC,CAAC;MACnBX,cAAc,EAAE;KAEjB,EAAE;MACDC,YAAY,EAAE;KACf,CAAC;EAEJ;EAAC,QAAAc,CAAA,G;qBAzDU1B,aAAa,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb/B,aAAa;IAAAgC,OAAA,EAAbhC,aAAa,CAAAiC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}