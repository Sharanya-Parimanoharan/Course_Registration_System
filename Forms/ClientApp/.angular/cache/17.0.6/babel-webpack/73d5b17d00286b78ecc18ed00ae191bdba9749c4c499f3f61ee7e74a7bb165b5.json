{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nconst VERSION$1 = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  /**\n   * @param {?} _sanityChecksEnabled\n   * @param {?=} _hammerLoader\n   */\n  constructor(_sanityChecksEnabled, _hammerLoader) {\n    this._sanityChecksEnabled = _sanityChecksEnabled;\n    this._hammerLoader = _hammerLoader;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     */\n    this._hasDoneGlobalChecks = false;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     */\n    this._hasCheckedHammer = false;\n    /**\n     * Reference to the global `document` object.\n     */\n    this._document = typeof document === 'object' && document ? document : null;\n    /**\n     * Reference to the global 'window' object.\n     */\n    this._window = typeof window === 'object' && window ? window : null;\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._checkCdkVersionMatch();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /**\n   * Whether any sanity checks are enabled\n   * @private\n   * @return {?}\n   */\n  _areChecksEnabled() {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n  /**\n   * Whether the code is running in tests.\n   * @private\n   * @return {?}\n   */\n  _isTestEnv() {\n    /** @type {?} */\n    const window = /** @type {?} */this._window;\n    return window && (window.__karma__ || window.jasmine);\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _checkDoctypeIsDefined() {\n    if (this._document && !this._document.doctype) {\n      console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _checkThemeIsPresent() {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n    /** @type {?} */\n    const testElement = this._document.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n    /** @type {?} */\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    this._document.body.removeChild(testElement);\n  }\n  /**\n   * Checks whether the material version matches the cdk version\n   * @private\n   * @return {?}\n   */\n  _checkCdkVersionMatch() {\n    if (VERSION$2.full !== VERSION.full) {\n      console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' + 'the Angular CDK version (' + VERSION.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n    }\n  }\n  /**\n   * Checks whether HammerJS is available.\n   * @return {?}\n   */\n  _checkHammerIsAvailable() {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n    if (this._areChecksEnabled() && !( /** @type {?} */this._window)['Hammer'] && !this._hammerLoader) {\n      console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\nMatCommonModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [BidiModule],\n    exports: [BidiModule]\n  }]\n}];\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [{\n  type: Boolean,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MATERIAL_SANITY_CHECKS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    /**\n     * @return {?}\n     */\n    get color() {\n      return this._color;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n      /** @type {?} */\n      const colorPalette = value || defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n    }\n    /**\n     * @return {?}\n     */\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether the component is in an error state.\n       */\n      this.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n      this.stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    updateErrorState() {\n      /** @type {?} */\n      const oldState = this.errorState;\n      /** @type {?} */\n      const parent = this._parentFormGroup || this._parentForm;\n      /** @type {?} */\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      /** @type {?} */\n      const control = this.ngControl ? ( /** @type {?} */this.ngControl.control) : null;\n      /** @type {?} */\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether this directive has been marked as initialized.\n       */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(\n      /**\n      * @param {?} subscriber\n      * @return {?}\n      */\n      subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          ( /** @type {?} */this._pendingSubscribers).push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * \\@docs-private\n     * @return {?}\n     */\n    _markInitialized() {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      ( /** @type {?} */this._pendingSubscribers).forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /**\n     * Emits and completes the subscriber stream (should only emit once).\n     * @param {?} subscriber\n     * @return {?}\n     */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n  }\n  /**\n   * A stream that emits when the locale changes.\n   * @return {?}\n   */\n  get localeChanges() {\n    return this._localeChanges;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param {?} value The value to be deserialized into a date object.\n   * @return {?} The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param {?} locale The new locale.\n   * @return {?}\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param {?} first The first date to compare.\n   * @param {?} second The second date to compare.\n   * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param {?} first The first date to check.\n   * @param {?} second The second date to check.\n   * @return {?} Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      /** @type {?} */\n      let firstValid = this.isValid(first);\n      /** @type {?} */\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param {?} date The date to clamp.\n   * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n   * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n   * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 =\n/**\n* @param {?} i\n* @return {?}\n*/\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n  /** @type {?} */\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n  /**\n   * @param {?} matDateLocale\n   * @param {?} platform\n   */\n  constructor(matDateLocale, platform) {\n    super();\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n    this.useUtcForDisplay = true;\n    super.setLocale(matDateLocale);\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getYear(date) {\n    return date.getFullYear();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getMonth(date) {\n    return date.getMonth();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getDate(date) {\n    return date.getDate();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n  getMonthNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12,\n      /**\n      * @param {?} i\n      * @return {?}\n      */\n      i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n  /**\n   * @return {?}\n   */\n  getDateNames() {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31,\n      /**\n      * @param {?} i\n      * @return {?}\n      */\n      i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n  getDayOfWeekNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7,\n      /**\n      * @param {?} i\n      * @return {?}\n      */\n      i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getYearName(date) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n  /**\n   * @return {?}\n   */\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  /**\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n  createDate(year, month, date) {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n    /** @type {?} */\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  /**\n   * @return {?}\n   */\n  today() {\n    return new Date();\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  /**\n   * @param {?} date\n   * @param {?} displayFormat\n   * @return {?}\n   */\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n      displayFormat = Object.assign({}, displayFormat, {\n        timeZone: 'utc'\n      });\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n  /**\n   * @param {?} date\n   * @param {?} years\n   * @return {?}\n   */\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  /**\n   * @param {?} date\n   * @param {?} months\n   * @return {?}\n   */\n  addCalendarMonths(date, months) {\n    /** @type {?} */\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  /**\n   * @param {?} date\n   * @param {?} days\n   * @return {?}\n   */\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   * @param {?} value\n   * @return {?}\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        /** @type {?} */\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  /**\n   * @return {?}\n   */\n  invalid() {\n    return new Date(NaN);\n  }\n  /**\n   * Creates a date but allows the month and date to overflow.\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n  _createDateWithOverflow(year, month, date) {\n    /** @type {?} */\n    const result = new Date(year, month, date);\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @private\n   * @param {?} n The number to pad.\n   * @return {?} The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @private\n   * @param {?} str The string to strip direction characters from.\n   * @return {?} The stripped string.\n   */\n  _stripDirectionalityCharacters(str) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @private\n   * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param {?} date Date from which we want to get the string representation according to dtf\n   * @return {?} A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    /** @type {?} */\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\nNativeDateAdapter.decorators = [{\n  type: Injectable\n}];\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_LOCALE]\n  }]\n}, {\n  type: Platform\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {}\nNativeDateModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [PlatformModule],\n    providers: [{\n      provide: DateAdapter,\n      useClass: NativeDateAdapter\n    }]\n  }]\n}];\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {}\nMatNativeDateModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [NativeDateModule],\n    providers: [{\n      provide: MAT_DATE_FORMATS,\n      useValue: ɵ0$1\n    }]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n}\nShowOnDirtyErrorStateMatcher.decorators = [{\n  type: Injectable\n}];\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n}\nErrorStateMatcher.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @nocollapse */\nErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = ['longpress', 'slide', 'slidestart', 'slideend', 'slideright', 'slideleft'];\nconst ɵ0$2 =\n  /**\n  * @return {?}\n  */\n  () => {},\n  ɵ1 =\n  /**\n  * @return {?}\n  */\n  () => {};\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n  on: ɵ0$2,\n  off: ɵ1\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n  /**\n   * @param {?=} _hammerOptions\n   * @param {?=} commonModule\n   */\n  constructor(_hammerOptions, commonModule) {\n    super();\n    this._hammerOptions = _hammerOptions;\n    /**\n     * List of new event names to add to the gesture support list\n     */\n    this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param {?} element Element to which to assign the new HammerJS gestures.\n   * @return {?} Newly-created HammerJS instance.\n   */\n  buildHammer(element) {\n    /** @type {?} */\n    const hammer = typeof window !== 'undefined' ? ( /** @type {?} */window).Hammer : null;\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n    /** @type {?} */\n    const mc = new hammer(element, this._hammerOptions || undefined);\n    // Default Hammer Recognizers.\n    /** @type {?} */\n    const pan = new hammer.Pan();\n    /** @type {?} */\n    const swipe = new hammer.Swipe();\n    /** @type {?} */\n    const press = new hammer.Press();\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    /** @type {?} */\n    const slide = this._createRecognizer(pan, {\n      event: 'slide',\n      threshold: 0\n    }, swipe);\n    /** @type {?} */\n    const longpress = this._createRecognizer(press, {\n      event: 'longpress',\n      time: 500\n    });\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n    return /** @type {?} */mc;\n  }\n  /**\n   * Creates a new recognizer, without affecting the default recognizers of HammerJS\n   * @private\n   * @param {?} base\n   * @param {?} options\n   * @param {...?} inheritances\n   * @return {?}\n   */\n  _createRecognizer(base, options, ...inheritances) {\n    /** @type {?} */\n    let recognizer = new ( /** @type {?} */base.constructor)(options);\n    inheritances.push(base);\n    inheritances.forEach(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => recognizer.recognizeWith(item));\n    return recognizer;\n  }\n}\nGestureConfig.decorators = [{\n  type: Injectable\n}];\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_HAMMER_OPTIONS]\n  }]\n}, {\n  type: MatCommonModule,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {}\nMatLine.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-line], [matLine]',\n    host: {\n      'class': 'mat-line'\n    }\n  }]\n}];\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(\n  /**\n  * @param {?} __0\n  * @return {?}\n  */\n  ({\n    length\n  }) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n  /** @type {?} */\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n  /**\n   * @param {?} lines\n   * @param {?} element\n   */\n  constructor(lines, element) {\n    setLines(lines, element);\n  }\n}\nclass MatLineModule {}\nMatLineModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule],\n    declarations: [MatLine]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n  FADING_IN: 0,\n  VISIBLE: 1,\n  FADING_OUT: 2,\n  HIDDEN: 3\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  /**\n   * @param {?} _renderer\n   * @param {?} element\n   * @param {?} config\n   */\n  constructor(_renderer, element, config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /**\n     * Current state of the ripple.\n     */\n    this.state = RippleState.HIDDEN;\n  }\n  /**\n   * Fades out the ripple element.\n   * @return {?}\n   */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n  /**\n   * @param {?} _target\n   * @param {?} _ngZone\n   * @param {?} elementOrElementRef\n   * @param {?} platform\n   */\n  constructor(_target, _ngZone, elementOrElementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the pointer is currently down or not.\n     */\n    this._isPointerDown = false;\n    /**\n     * Events to be registered on the trigger element.\n     */\n    this._triggerEvents = new Map();\n    /**\n     * Set of currently active ripple references.\n     */\n    this._activeRipples = new Set();\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     */\n    this._onMousedown =\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n      /** @type {?} */\n      const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      /** @type {?} */\n      const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     */\n    this._onTouchStart =\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      if (!this._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true;\n        // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n        /** @type {?} */\n        const touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     */\n    this._onPointerUp =\n    /**\n    * @return {?}\n    */\n    () => {\n      if (!this._isPointerDown) {\n        return;\n      }\n      this._isPointerDown = false;\n      // Fade-out all ripples that are visible and not persistent.\n      this._activeRipples.forEach(\n      /**\n      * @param {?} ripple\n      * @return {?}\n      */\n      ripple => {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        /** @type {?} */\n        const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    };\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this._onMousedown).set('mouseup', this._onPointerUp).set('mouseleave', this._onPointerUp).set('touchstart', this._onTouchStart).set('touchend', this._onPointerUp).set('touchcancel', this._onPointerUp);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param {?=} config Extra ripple options.\n   * @return {?}\n   */\n  fadeInRipple(x, y, config = {}) {\n    /** @type {?} */\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    /** @type {?} */\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    /** @type {?} */\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    /** @type {?} */\n    const offsetX = x - containerRect.left;\n    /** @type {?} */\n    const offsetY = y - containerRect.top;\n    /** @type {?} */\n    const duration = animationConfig.enterDuration;\n    /** @type {?} */\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)';\n    // Exposed reference to the ripple that will be returned.\n    /** @type {?} */\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = RippleState.FADING_IN;\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = RippleState.VISIBLE;\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n    return rippleRef;\n  }\n  /**\n   * Fades out a ripple reference.\n   * @param {?} rippleRef\n   * @return {?}\n   */\n  fadeOutRipple(rippleRef) {\n    /** @type {?} */\n    const wasActive = this._activeRipples.delete(rippleRef);\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n    /** @type {?} */\n    const rippleEl = rippleRef.element;\n    /** @type {?} */\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(\n    /**\n    * @return {?}\n    */\n    () => {\n      rippleRef.state = RippleState.HIDDEN;\n      ( /** @type {?} */rippleEl.parentNode).removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n  /**\n   * Fades out all currently active ripples.\n   * @return {?}\n   */\n  fadeOutAll() {\n    this._activeRipples.forEach(\n    /**\n    * @param {?} ripple\n    * @return {?}\n    */\n    ripple => ripple.fadeOut());\n  }\n  /**\n   * Sets up the trigger event listeners\n   * @param {?} elementOrElementRef\n   * @return {?}\n   */\n  setupTriggerEvents(elementOrElementRef) {\n    /** @type {?} */\n    const element = coerceElement(elementOrElementRef);\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._triggerEvents.forEach(\n      /**\n      * @param {?} fn\n      * @param {?} type\n      * @return {?}\n      */\n      (fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n    this._triggerElement = element;\n  }\n  /**\n   * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n   * @private\n   * @param {?} fn\n   * @param {?=} delay\n   * @return {?}\n   */\n  _runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => setTimeout(fn, delay));\n  }\n  /**\n   * Removes previously registered event listeners from the trigger element.\n   * @return {?}\n   */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach(\n      /**\n      * @param {?} fn\n      * @param {?} type\n      * @return {?}\n      */\n      (fn, type) => {\n        ( /** @type {?} */this._triggerElement).removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  /** @type {?} */\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  /** @type {?} */\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  /**\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} globalOptions\n   * @param {?=} animationMode\n   */\n  constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n    this._elementRef = _elementRef;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   * @return {?}\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  /**\n   * @param {?} trigger\n   * @return {?}\n   */\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /**\n   * Fades out all currently showing ripple elements.\n   * @return {?}\n   */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: Object.assign({}, this._globalOptions.animation, this.animation),\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /**\n   * Sets up the trigger event listeners if ripples are enabled.\n   * @private\n   * @return {?}\n   */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /**\n   * Launches a manual ripple at the specified coordinated or just by the ripple config.\n   * @param {?} configOrX\n   * @param {?=} y\n   * @param {?=} config\n   * @return {?}\n   */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n    }\n  }\n}\nMatRipple.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-ripple], [matRipple]',\n    exportAs: 'matRipple',\n    host: {\n      'class': 'mat-ripple',\n      '[class.mat-ripple-unbounded]': 'unbounded'\n    }\n  }]\n}];\n/** @nocollapse */\nMatRipple.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {}\nMatRippleModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatCommonModule, PlatformModule],\n    exports: [MatRipple, MatCommonModule],\n    declarations: [MatRipple]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n  /**\n   * @param {?=} _animationMode\n   */\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /**\n     * Display state of the checkbox.\n     */\n    this.state = 'unchecked';\n    /**\n     * Whether the checkbox is disabled.\n     */\n    this.disabled = false;\n  }\n}\nMatPseudoCheckbox.decorators = [{\n  type: Component,\n  args: [{\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mat-pseudo-checkbox',\n    styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n    template: '',\n    host: {\n      'class': 'mat-pseudo-checkbox',\n      '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n      '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n      '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n      '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n    }\n  }]\n}];\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {}\nMatPseudoCheckboxModule.decorators = [{\n  type: NgModule,\n  args: [{\n    exports: [MatPseudoCheckbox],\n    declarations: [MatPseudoCheckbox]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n  constructor() {\n    super(...arguments);\n    /**\n     * Unique id for the underlying label.\n     */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n  }\n}\nMatOptgroup.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-optgroup',\n    exportAs: 'matOptgroup',\n    template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n    host: {\n      'class': 'mat-optgroup',\n      'role': 'group',\n      '[class.mat-optgroup-disabled]': 'disabled',\n      '[attr.aria-disabled]': 'disabled.toString()',\n      '[attr.aria-labelledby]': '_labelId'\n    }\n  }]\n}];\nMatOptgroup.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n  /**\n   * @param {?} source\n   * @param {?=} isUserInput\n   */\n  constructor(source, isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?} _parent\n   * @param {?} group\n   */\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /**\n     * The unique ID of the option.\n     */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /**\n     * Event emitted when the option is selected or deselected.\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     */\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether the wrapping component is in multiple selection mode.\n   * @return {?}\n   */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /**\n   * Whether or not the option is currently selected.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * Whether the option is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether ripples for the option are disabled.\n   * @return {?}\n   */\n  get disableRipple() {\n    return this._parent && this._parent.disableRipple;\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   * @return {?}\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   * @return {?}\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /**\n   * Selects the option.\n   * @return {?}\n   */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Deselects the option.\n   * @return {?}\n   */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Sets focus onto this option.\n   * @param {?=} _origin\n   * @param {?=} options\n   * @return {?}\n   */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    /** @type {?} */\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n  getLabel() {\n    return this.viewValue;\n  }\n  /**\n   * Ensures the option is selected when activated from the keyboard.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   * @return {?}\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   * @return {?}\n   */\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /**\n   * Returns the correct tabindex for the option depending on disabled state.\n   * @return {?}\n   */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Gets the host DOM element.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      /** @type {?} */\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * Emits the selection change event.\n   * @private\n   * @param {?=} isUserInput\n   * @return {?}\n   */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\nMatOption.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-option',\n    exportAs: 'matOption',\n    host: {\n      'role': 'option',\n      '[attr.tabindex]': '_getTabIndex()',\n      '[class.mat-selected]': 'selected',\n      '[class.mat-option-multiple]': 'multiple',\n      '[class.mat-active]': 'active',\n      '[id]': 'id',\n      '[attr.aria-selected]': '_getAriaSelected()',\n      '[attr.aria-disabled]': 'disabled.toString()',\n      '[class.mat-option-disabled]': 'disabled',\n      '(click)': '_selectViaInteraction()',\n      '(keydown)': '_handleKeydown($event)',\n      'class': 'mat-option'\n    },\n    styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n    template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }]\n}, {\n  type: MatOptgroup,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatOption.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    /** @type {?} */\n    let optionsArray = options.toArray();\n    /** @type {?} */\n    let groups = optionGroups.toArray();\n    /** @type {?} */\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n  /** @type {?} */\n  const optionOffset = optionIndex * optionHeight;\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {}\nMatOptionModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n    exports: [MatOption, MatOptgroup],\n    declarations: [MatOption, MatOptgroup]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };","map":{"version":3,"names":["Version","NgModule","InjectionToken","Optional","Inject","isDevMode","inject","LOCALE_ID","Injectable","Directive","ElementRef","Input","NgZone","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","Output","ɵɵdefineInjectable","HAMMER_LOADER","HammerGestureConfig","BidiModule","VERSION","coerceBooleanProperty","coerceElement","Subject","Observable","Platform","PlatformModule","normalizePassiveListenerOptions","startWith","isFakeMousedownFromScreenReader","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","CommonModule","VERSION$1","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$2","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_isTestEnv","__karma__","jasmine","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","full","_checkHammerIsAvailable","decorators","type","args","imports","exports","ctorParameters","Boolean","undefined","mixinDisabled","base","_disabled","disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","errorState","stateChanges","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","Math","Object","assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","providers","useClass","ɵ0$1","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","ngInjectableDef","ErrorStateMatcher_Factory","token","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","element","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","item","MatLine","selector","host","setLines","lines","changes","pipe","subscribe","setClass","className","isAdd","MatLineSetter","MatLineModule","declarations","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","exportAs","propDecorators","unbounded","MatRippleModule","MatPseudoCheckbox","_animationMode","encapsulation","None","changeDetection","OnPush","styles","template","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","_labelId","inputs","label","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","selected","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ɵa1"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/node_modules/@angular/material/esm2015/core.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nconst VERSION$1 = new Version('8.2.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        if (VERSION$2.full !== VERSION.full) {\n            console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule],\n                exports: [BidiModule],\n            },] },\n];\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ],\n            },] },\n];\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.decorators = [\n    { type: Injectable },\n];\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            },] },\n];\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] },\n];\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.decorators = [\n    { type: Component, args: [{encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.decorators = [\n    { type: Component, args: [{selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId',\n                }\n            },] },\n];\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.decorators = [\n    { type: Component, args: [{selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option',\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}