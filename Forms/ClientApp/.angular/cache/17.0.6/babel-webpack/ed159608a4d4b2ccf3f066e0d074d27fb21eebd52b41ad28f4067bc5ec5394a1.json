{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction PasswordResetComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" Invalid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" Password Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetComponent_small_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 33);\n    i0.ɵɵtext(1, \"Email is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PasswordResetComponent_small_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 33);\n    i0.ɵɵtext(1, \"Email is Invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PasswordResetComponent {\n  static #_ = this.ɵfac = function PasswordResetComponent_Factory(t) {\n    return new (t || PasswordResetComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordResetComponent,\n    selectors: [[\"app-password-reset\"]],\n    decls: 50,\n    vars: 7,\n    consts: [[1, \"border\", \"p-3\", \"rounded-3\", \"perfect-centering\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"col\", \"mb-3\"], [\"for\", \"email\", 1, \"form=label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"pwd\", 1, \"form=label\"], [\"type\", \"pwd\", \"id\", \"pwd\", \"formControlName\", \"pwd\", 1, \"form-control\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"type\", \"button\", \"id\", \"forgot\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"font-weight-bold\"], [1, \"row\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"area-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [2, \"font-size\", \"29px\", \"font-weight\", \"700\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"id\", \"closebtn\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"form-text\", \"text-danger\"], [1, \"text-danger\"]],\n    template: function PasswordResetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PasswordResetComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.loginSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, PasswordResetComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"div\", 4)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, PasswordResetComponent_div_16_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 1)(18, \"div\", 4)(19, \"div\", 10)(20, \"a\", 11);\n        i0.ɵɵtext(21, \"Forgot Password ?\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"div\", 12)(23, \"div\", 13)(24, \"div\", 14)(25, \"button\", 15);\n        i0.ɵɵtext(26, \"Login \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(27, \"div\", 16)(28, \"div\", 17)(29, \"div\", 18)(30, \"div\", 19)(31, \"p\", 20)(32, \"span\", 21);\n        i0.ɵɵtext(33, \"Forget Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementStart(35, \"small\");\n        i0.ɵɵtext(36, \"Please Provide your Email We will Send the Reset Link\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(37, \"button\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 23)(39, \"div\", 24)(40, \"div\", 25);\n        i0.ɵɵelement(41, \"span\", 26);\n        i0.ɵɵelementStart(42, \"input\", 27);\n        i0.ɵɵlistener(\"ngModelChange\", function PasswordResetComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.resetPassword = $event;\n        })(\"ngModelChange\", function PasswordResetComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.checkValidEmail($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(43, PasswordResetComponent_small_43_Template, 2, 0, \"small\", 28)(44, PasswordResetComponent_small_44_Template, 2, 0, \"small\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 29)(46, \"button\", 30);\n        i0.ɵɵtext(47, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function PasswordResetComponent_Template_button_click_48_listener() {\n          return ctx.confirm();\n        });\n        i0.ɵɵtext(49, \"Send\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginfrm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email.errors == null ? null : ctx.email.errors[\"required\"]) && (ctx.email.dirty || ctx.email.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"required\"]) && (ctx.pwd.dirty || ctx.pwd.touched));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.loginfrm.invalid);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngModel\", ctx.resetPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.resetPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isValid && ctx.resetPassword);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PasswordResetComponent","_","_2","selectors","decls","vars","consts","template","PasswordResetComponent_Template","rf","ctx","ɵɵlistener","PasswordResetComponent_Template_form_ngSubmit_0_listener","loginSubmit","ɵɵelement","ɵɵtemplate","PasswordResetComponent_div_10_Template","PasswordResetComponent_div_16_Template","PasswordResetComponent_Template_input_ngModelChange_42_listener","$event","resetPassword","checkValidEmail","PasswordResetComponent_small_43_Template","PasswordResetComponent_small_44_Template","PasswordResetComponent_Template_button_click_48_listener","confirm","ɵɵproperty","loginfrm","ɵɵadvance","email","errors","dirty","touched","pwd","invalid","isValid"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/password-reset/password-reset.component.ts","/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/password-reset/password-reset.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n\n}\n","\n<form class=\"border p-3 rounded-3 perfect-centering\" [formGroup]=\"loginfrm\" (ngSubmit)=\"loginSubmit()\">\n    <div class=\"row g-0\">\n        <div class=\"col text-center p-2 mb-3 bg-light\">\n            <span class=\"fs-3\">Login</span>\n        </div>\n    </div>\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <label for=\"email\" class=\"form=label\">Email Address</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" />\n            <div class=\"form-text text-danger\" *ngIf=\"email.errors?.['required'] && (email.dirty || email.touched)\">\n                Invalid Email\n            </div>\n        </div>\n    </div>\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <label for=\"pwd\" class=\"form=label\">Password</label>\n            <input type=\"pwd\" class=\"form-control\" id=\"pwd\" formControlName=\"pwd\" />\n            <div class=\"form-text text-danger\" *ngIf=\"pwd.errors?.['required'] && (pwd.dirty || pwd.touched)\">\n                Password Required\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row g-0\">\n        <div class=\"col mb-3\">\n            <div class=\"form-inline fr mt-4\"><a type=\"button\" id=\"forgot\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"font-weight-bold\">Forgot Password ?</a></div>\n\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n            <div class=\"d-grid\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginfrm.invalid\">Login </button>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" area-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <p class=\"modal-title\" id=\"exampleModalLabel\">\n                    <span style=\"font-size:29px; font-weight:700\">Forget Password?</span><br />\n                    <small>Please Provide your Email We will Send the Reset Link</small>\n                </p>\n\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group pt-3\">\n                    <div class=\"input-field\"><span class=\"fa fa-user p-2\"></span><input type=\"text\" placeholder=\"Email\" [(ngModel)]=\"resetPassword\" (ngModelChange)=\"checkValidEmail($event)\" /></div>\n                </div>\n                <small *ngIf=\"!resetPassword\" class=\"text-danger\">Email is Required</small>\n                <small *ngIf=\"!isValid && resetPassword\" class=\"text-danger\">Email is Invalid</small>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" id=\"closebtn\" (click)=\"confirm()\" class=\"btn btn-primary\">Send</button>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}