{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, Optional, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  /** @type {?} */\n  const method =\n  /**\n  * @param {?} element\n  * @return {?}\n  */\n  element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _inkBarPositioner\n   * @param {?=} _animationMode\n   */\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param {?} element\n   * @return {?}\n   */\n  alignToElement(element) {\n    this.show();\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        requestAnimationFrame(\n        /**\n        * @return {?}\n        */\n        () => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n  /**\n   * Shows the ink bar.\n   * @return {?}\n   */\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /**\n   * Hides the ink bar.\n   * @return {?}\n   */\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @private\n   * @param {?} element\n   * @return {?}\n   */\n  _setStyles(element) {\n    /** @type {?} */\n    const positions = this._inkBarPositioner(element);\n    /** @type {?} */\n    const inkBar = this._elementRef.nativeElement;\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\nMatInkBar.decorators = [{\n  type: Directive,\n  args: [{\n    selector: 'mat-ink-bar',\n    host: {\n      'class': 'mat-ink-bar',\n      '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n    }\n  }]\n}];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [_MAT_INK_BAR_POSITIONER]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n  /**\n   * @param {?} template\n   */\n  constructor(template) {\n    this.template = template;\n  }\n}\nMatTabContent.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabContent]'\n  }]\n}];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {}\nMatTabLabel.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-tab-label], [matTabLabel]'\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n  /**\n   * @param {?} _viewContainerRef\n   */\n  constructor(_viewContainerRef) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     */\n    this.textLabel = '';\n    /**\n     * Portal that will be the hosted content of the tab\n     */\n    this._contentPortal = null;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     */\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    this.isActive = false;\n  }\n  /**\n   * \\@docs-private\n   * @return {?}\n   */\n  get content() {\n    return this._contentPortal;\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\nMatTab.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab',\n    template: \"<ng-template><ng-content></ng-content></ng-template>\",\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'matTab'\n  }]\n}];\n/** @nocollapse */\nMatTab.ctorParameters = () => [{\n  type: ViewContainerRef\n}];\nMatTab.propDecorators = {\n  templateLabel: [{\n    type: ContentChild,\n    args: [MatTabLabel, {\n      static: false\n    }]\n  }],\n  _explicitContent: [{\n    type: ContentChild,\n    args: [MatTabContent, {\n      read: TemplateRef,\n      static: true\n    }]\n  }],\n  _implicitContent: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  textLabel: [{\n    type: Input,\n    args: ['label']\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n  /**\n   * Animation translates a tab along the X axis.\n   */\n  translateTab: trigger('translateTab', [\n  // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })),\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  /**\n   * @param {?} componentFactoryResolver\n   * @param {?} viewContainerRef\n   * @param {?} _host\n   */\n  constructor(componentFactoryResolver, viewContainerRef, _host) {\n    super(componentFactoryResolver, viewContainerRef);\n    this._host = _host;\n    /**\n     * Subscription to events for when the tab body begins centering.\n     */\n    this._centeringSub = Subscription.EMPTY;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     */\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /**\n   * Set initial visibility or set up subscription for changing visibility.\n   * @return {?}\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(\n    /**\n    * @param {?} isCentering\n    * @return {?}\n    */\n    isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.detach();\n    });\n  }\n  /**\n   * Clean up centering subscription.\n   * @return {?}\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\nMatTabBodyPortal.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabBodyHost]'\n  }]\n}];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: ViewContainerRef\n}, {\n  type: MatTabBody,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatTabBody)]\n  }]\n}];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dir\n   * @param {?} changeDetectorRef\n   */\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /**\n     * Subscription to the directionality change observable.\n     */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /**\n     * Emits when an animation on the tab is complete.\n     */\n    this._translateTabComplete = new Subject();\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     */\n    this._onCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n    this._beforeCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n    this._afterLeavingCenter = new EventEmitter();\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     */\n    this._onCentered = new EventEmitter(true);\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /**\n     * Duration for the tab's animation.\n     */\n    this.animationDuration = '500ms';\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(\n      /**\n      * @param {?} dir\n      * @return {?}\n      */\n      dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged(\n    /**\n    * @param {?} x\n    * @param {?} y\n    * @return {?}\n    */\n    (x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /**\n   * The shifted index position of the tab body, where zero represents the active center tab.\n   * @param {?} position\n   * @return {?}\n   */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   * @return {?}\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onTranslateTabStarted(event) {\n    /** @type {?} */\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /**\n   * The text direction of the containing app.\n   * @return {?}\n   */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Whether the provided position state is considered center, regardless of origin.\n   * @param {?} position\n   * @return {?}\n   */\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /**\n   * Computes the position state that will be used for the tab-body animation trigger.\n   * @private\n   * @param {?=} dir\n   * @return {?}\n   */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   * @private\n   * @return {?}\n   */\n  _computePositionFromOrigin() {\n    /** @type {?} */\n    const dir = this._getLayoutDirection();\n    if (dir == 'ltr' && this.origin <= 0 || dir == 'rtl' && this.origin > 0) {\n      return 'left-origin-center';\n    }\n    return 'right-origin-center';\n  }\n}\n_MatTabBodyBase.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-tab-body-base'\n  }]\n}];\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n_MatTabBodyBase.propDecorators = {\n  _onCentering: [{\n    type: Output\n  }],\n  _beforeCentering: [{\n    type: Output\n  }],\n  _afterLeavingCenter: [{\n    type: Output\n  }],\n  _onCentered: [{\n    type: Output\n  }],\n  _content: [{\n    type: Input,\n    args: ['content']\n  }],\n  origin: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }]\n};\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} changeDetectorRef\n   */\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\nMatTabBody.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-body',\n    template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [matTabsAnimations.translateTab],\n    host: {\n      'class': 'mat-tab-body'\n    }\n  }]\n}];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\nMatTabBody.propDecorators = {\n  _portalHost: [{\n    type: ViewChild,\n    args: [PortalHostDirective, {\n      static: false\n    }]\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultConfig\n   * @param {?=} _animationMode\n   */\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     */\n    this._indexToSelect = 0;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     */\n    this._tabBodyWrapperHeight = 0;\n    /**\n     * Subscription to tabs being added/removed.\n     */\n    this._tabsSubscription = Subscription.EMPTY;\n    /**\n     * Subscription to changes in the tab labels.\n     */\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._dynamicHeight = false;\n    this._selectedIndex = null;\n    /**\n     * Position of the tab header.\n     */\n    this.headerPosition = 'above';\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     */\n    this.selectedIndexChange = new EventEmitter();\n    /**\n     * Event emitted when focus has changed within a tab group.\n     */\n    this.focusChange = new EventEmitter();\n    /**\n     * Event emitted when the body animation has completed\n     */\n    this.animationDone = new EventEmitter();\n    /**\n     * Event emitted when the tab selection has changed.\n     */\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n  }\n  /**\n   * Whether the tab group should grow to the size of the active tab.\n   * @return {?}\n   */\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /**\n   * The index of the active tab.\n   * @return {?}\n   */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /**\n   * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n   * @return {?}\n   */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  /**\n   * Background color of the tab group.\n   * @return {?}\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set backgroundColor(value) {\n    /** @type {?} */\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   * @return {?}\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    /** @type {?} */\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      /** @type {?} */\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._tabs.forEach(\n        /**\n        * @param {?} tab\n        * @param {?} index\n        * @return {?}\n        */\n        (tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach(\n    /**\n    * @param {?} tab\n    * @param {?} index\n    * @return {?}\n    */\n    (tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        /** @type {?} */\n        const tabs = this._tabs.toArray();\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /**\n   * Re-aligns the ink bar to the selected tab element.\n   * @return {?}\n   */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * @param {?} index\n   * @return {?}\n   */\n  _focusChanged(index) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  _createChangeEvent(index) {\n    /** @type {?} */\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   * @private\n   * @return {?}\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(\n    /**\n    * @param {?} tab\n    * @return {?}\n    */\n    tab => tab._stateChanges)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => this._changeDetectorRef.markForCheck());\n  }\n  /**\n   * Clamps the given index to the bounds of 0 and the tabs length.\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /**\n   * Returns a unique id for each tab label element\n   * @param {?} i\n   * @return {?}\n   */\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /**\n   * Returns a unique id for each tab content element\n   * @param {?} i\n   * @return {?}\n   */\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   * @param {?} tabHeight\n   * @return {?}\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    /** @type {?} */\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /**\n   * Removes the height of the tab body wrapper.\n   * @return {?}\n   */\n  _removeTabBodyWrapperHeight() {\n    /** @type {?} */\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /**\n   * Handle click events, setting new selected index if appropriate.\n   * @param {?} tab\n   * @param {?} tabHeader\n   * @param {?} index\n   * @return {?}\n   */\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /**\n   * Retrieves the tabindex for the tab.\n   * @param {?} tab\n   * @param {?} idx\n   * @return {?}\n   */\n  _getTabIndex(tab, idx) {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n_MatTabGroupBase.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-tab-group-base'\n  }]\n}];\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TABS_CONFIG]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabGroupBase.propDecorators = {\n  dynamicHeight: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  headerPosition: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  backgroundColor: [{\n    type: Input\n  }],\n  selectedIndexChange: [{\n    type: Output\n  }],\n  focusChange: [{\n    type: Output\n  }],\n  animationDone: [{\n    type: Output\n  }],\n  selectedTabChange: [{\n    type: Output\n  }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?=} defaultConfig\n   * @param {?=} animationMode\n   */\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\nMatTabGroup.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-group',\n    exportAs: 'matTabGroup',\n    template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color', 'disableRipple'],\n    host: {\n      'class': 'mat-tab-group',\n      '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n      '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n    }\n  }]\n}];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TABS_CONFIG]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabGroup.propDecorators = {\n  _tabs: [{\n    type: ContentChildren,\n    args: [MatTab]\n  }],\n  _tabBodyWrapper: [{\n    type: ViewChild,\n    args: ['tabBodyWrapper', {\n      static: false\n    }]\n  }],\n  _tabHeader: [{\n    type: ViewChild,\n    args: ['tabHeader', {\n      static: false\n    }]\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n  /**\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /**\n   * Sets focus on the wrapper element\n   * @return {?}\n   */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  /**\n   * @return {?}\n   */\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  /**\n   * @return {?}\n   */\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\nMatTabLabelWrapper.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n      '[class.mat-tab-disabled]': 'disabled',\n      '[attr.aria-disabled]': '!!disabled'\n    }\n  }]\n}];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [{\n  type: ElementRef\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = /** @type {?} */normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} _viewportRuler\n   * @param {?} _dir\n   * @param {?} _ngZone\n   * @param {?=} _platform\n   * @param {?=} _animationMode\n   */\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     */\n    this._scrollDistance = 0;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     */\n    this._selectedIndexChanged = false;\n    /**\n     * Emits when the component is destroyed.\n     */\n    this._destroyed = new Subject();\n    /**\n     * Whether the controls for pagination should be displayed\n     */\n    this._showPaginationControls = false;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     */\n    this._disableScrollAfter = true;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     */\n    this._disableScrollBefore = true;\n    /**\n     * Stream that will stop the automated scrolling.\n     */\n    this._stopScrolling = new Subject();\n    this._selectedIndex = 0;\n    /**\n     * Event emitted when the option is selected.\n     */\n    this.selectFocusedIndex = new EventEmitter();\n    /**\n     * Event emitted when a label is focused.\n     */\n    this.indexFocused = new EventEmitter();\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._stopInterval();\n      });\n    });\n  }\n  /**\n   * The index of the active tab.\n   * @return {?}\n   */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItemIndex(value);\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    /** @type {?} */\n    const dirChange = this._dir ? this._dir.change : of(null);\n    /** @type {?} */\n    const resize = this._viewportRuler.change(150);\n    /** @type {?} */\n    const realign =\n    /**\n    * @return {?}\n    */\n    () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withWrap();\n    this._keyManager.updateActiveItem(0);\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @param {?} newFocusIndex\n    * @return {?}\n    */\n    newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /**\n   * Handles keyboard events on the header.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        this._itemSelected(event);\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   * @return {?}\n   */\n  _onContentChanges() {\n    /** @type {?} */\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   * @return {?}\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /**\n   * Tracks which element has focus; used for keyboard navigation\n   * @return {?}\n   */\n  get focusIndex() {\n    return this._keyManager ? ( /** @type {?} */this._keyManager.activeItemIndex) : 0;\n  }\n  /**\n   * When the focus index is set, we must manually send focus to the correct label\n   * @param {?} value\n   * @return {?}\n   */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   * @param {?} index\n   * @return {?}\n   */\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n    /** @type {?} */\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   * @param {?} tabIndex\n   * @return {?}\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      /** @type {?} */\n      const containerEl = this._tabListContainer.nativeElement;\n      /** @type {?} */\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /**\n   * The layout direction of the containing app.\n   * @return {?}\n   */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Performs the CSS transformation on the tab list that will cause the list to scroll.\n   * @return {?}\n   */\n  _updateTabScrollPosition() {\n    /** @type {?} */\n    const scrollDistance = this.scrollDistance;\n    /** @type {?} */\n    const platform = this._platform;\n    /** @type {?} */\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /**\n   * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n   * @return {?}\n   */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @param {?} direction\n   * @return {?}\n   */\n  _scrollHeader(direction) {\n    /** @type {?} */\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    /** @type {?} */\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /**\n   * Handles click events on the pagination arrows.\n   * @param {?} direction\n   * @return {?}\n   */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @param {?} labelIndex\n   * @return {?}\n   */\n  _scrollToLabel(labelIndex) {\n    /** @type {?} */\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    /** @type {?} */\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    /** @type {?} */\n    let labelBeforePos;\n    /** @type {?} */\n    let labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    /** @type {?} */\n    const beforeVisiblePos = this.scrollDistance;\n    /** @type {?} */\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n  _checkPaginationEnabled() {\n    /** @type {?} */\n    const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n    this._showPaginationControls = isEnabled;\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n  _getMaxScrollDistance() {\n    /** @type {?} */\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    /** @type {?} */\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /**\n   * Tells the ink-bar to align itself to the current label wrapper\n   * @return {?}\n   */\n  _alignInkBarToSelectedTab() {\n    /** @type {?} */\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    /** @type {?} */\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /**\n   * Stops the currently-running paginator interval.\n   * @return {?}\n   */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param {?} direction In which direction the paginator should be scrolled.\n   * @return {?}\n   */\n  _handlePaginatorPress(direction) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @private\n   * @param {?} position Position to which to scroll.\n   * @return {?} Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    /** @type {?} */\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n}\nMatPaginatedTabHeader.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-paginated-tab-header'\n  }]\n}];\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} animationMode\n   */\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform,\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /**\n   * Whether the ripple effect is disabled or not.\n   * @return {?}\n   */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  /**\n   * @protected\n   * @param {?} event\n   * @return {?}\n   */\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n}\n_MatTabHeaderBase.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-tab-header-base'\n  }]\n}];\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabHeaderBase.propDecorators = {\n  disableRipple: [{\n    type: Input\n  }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} animationMode\n   */\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform,\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\nMatTabHeader.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-header',\n    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n    inputs: ['selectedIndex'],\n    outputs: ['selectFocusedIndex', 'indexFocused'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n      'class': 'mat-tab-header',\n      '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n      '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n    }\n  }]\n}];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabHeader.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [MatTabLabelWrapper]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator', {\n      static: false\n    }]\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator', {\n      static: false\n    }]\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?=} platform\n   * @param {?=} animationMode\n   */\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,\n  /**\n   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n   */\n  platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /**\n     * Theme color of the nav bar.\n     */\n    this.color = 'primary';\n  }\n  /**\n   * Background color of the tab nav.\n   * @return {?}\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set backgroundColor(value) {\n    /** @type {?} */\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /**\n   * Whether the ripple effect is disabled or not.\n   * @return {?}\n   */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  _itemSelected() {\n    // noop\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.updateActiveLink();\n    });\n    super.ngAfterContentInit();\n  }\n  /**\n   * Notifies the component that the active link has been changed.\n   * \\@breaking-change 8.0.0 `element` parameter to be removed.\n   * @param {?=} _element\n   * @return {?}\n   */\n  updateActiveLink(_element) {\n    if (!this._items) {\n      return;\n    }\n    /** @type {?} */\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n_MatTabNavBase.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-tab-nav-base'\n  }]\n}];\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Platform,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabNavBase.propDecorators = {\n  backgroundColor: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?=} platform\n   * @param {?=} animationMode\n   */\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,\n  /**\n   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n   */\n  platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\nMatTabNav.decorators = [{\n  type: Component,\n  args: [{\n    selector: '[mat-tab-nav-bar]',\n    exportAs: 'matTabNavBar, matTabNav',\n    inputs: ['color'],\n    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n    host: {\n      'class': 'mat-tab-nav-bar mat-tab-header',\n      '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n      '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n      '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n      '[class.mat-accent]': 'color === \"accent\"',\n      '[class.mat-warn]': 'color === \"warn\"'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Platform,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabNav.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatTabLink), {\n      descendants: true\n    }]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator', {\n      static: false\n    }]\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator', {\n      static: false\n    }]\n  }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  /**\n   * @param {?} _tabNavBar\n   * @param {?} elementRef\n   * @param {?} globalRippleOptions\n   * @param {?} tabIndex\n   * @param {?} _focusMonitor\n   * @param {?=} animationMode\n   */\n  constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /**\n     * Whether the tab link is active or not.\n     */\n    this._isActive = false;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n    _focusMonitor.monitor(elementRef);\n  }\n  /**\n   * Whether the link is active.\n   * @return {?}\n   */\n  get active() {\n    return this._isActive;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set active(value) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * \\@docs-private\n   * @return {?}\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /**\n   * @return {?}\n   */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n_MatTabLinkBase.decorators = [{\n  type: Directive,\n  args: [{\n    // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n    selector: 'do-not-use-abstract-mat-tab-link-base'\n  }]\n}];\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [{\n  type: _MatTabNavBase\n}, {\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabLinkBase.propDecorators = {\n  active: [{\n    type: Input\n  }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n  /**\n   * @param {?} tabNavBar\n   * @param {?} elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?} globalRippleOptions\n   * @param {?} tabIndex\n   * @param {?} focusMonitor\n   * @param {?=} animationMode\n   */\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\nMatTabLink.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-tab-link], [matTabLink]',\n    exportAs: 'matTabLink',\n    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n    host: {\n      'class': 'mat-tab-link',\n      '[attr.aria-current]': 'active ? \"page\" : null',\n      '[attr.aria-disabled]': 'disabled',\n      '[attr.tabIndex]': 'tabIndex',\n      '[class.mat-tab-disabled]': 'disabled',\n      '[class.mat-tab-label-active]': 'active'\n    }\n  }]\n}];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [{\n  type: MatTabNav\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {}\nMatTabsModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n    // Don't export all components because some are only to be used internally.\n    exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],\n    declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent, ( /** @type {?} */\n    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n    MatPaginatedTabHeader), ( /** @type {?} */_MatTabGroupBase), ( /** @type {?} */_MatTabNavBase), ( /** @type {?} */_MatTabBodyBase), ( /** @type {?} */_MatTabHeaderBase), ( /** @type {?} */_MatTabLinkBase)]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTabsModule, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatPaginatedTabHeader as ɵb24 };","map":{"version":3,"names":["Directive","ElementRef","Inject","InjectionToken","NgZone","Optional","TemplateRef","ChangeDetectionStrategy","Component","ContentChild","Input","ViewChild","ViewContainerRef","ViewEncapsulation","ChangeDetectorRef","Output","EventEmitter","ComponentFactoryResolver","forwardRef","ContentChildren","Attribute","NgModule","ANIMATION_MODULE_TYPE","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalHostDirective","PortalModule","mixinDisabled","mixinColor","mixinDisableRipple","MAT_RIPPLE_GLOBAL_OPTIONS","mixinTabIndex","RippleRenderer","MatCommonModule","MatRippleModule","Subject","Subscription","merge","of","timer","fromEvent","animate","state","style","transition","trigger","Directionality","startWith","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceNumberProperty","ViewportRuler","FocusKeyManager","FocusMonitor","A11yModule","END","ENTER","HOME","SPACE","hasModifierKey","Platform","normalizePassiveListenerOptions","ObserversModule","CommonModule","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","hide","positions","inkBar","decorators","type","args","selector","host","ctorParameters","undefined","String","MatTabContent","template","MatTabLabel","MatTabBase","_MatTabMixinBase","MatTab","_viewContainerRef","textLabel","_contentPortal","_stateChanges","position","origin","isActive","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","inputs","changeDetection","OnPush","encapsulation","None","exportAs","propDecorators","templateLabel","static","read","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","value","elementRef","styles","animations","_portalHost","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","selectedIndex","_animationDuration","test","backgroundColor","_backgroundColor","classList","remove","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","_tabs","forEach","tab","index","ngAfterContentInit","_subscribeToTabLabels","tabs","toArray","i","length","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","_focusChanged","map","Math","min","max","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","disabled","focusIndex","_getTabIndex","idx","MatTabGroup","animationMode","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_keyManager","updateActiveItemIndex","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","disableRipple","MatTabHeader","outputs","_MatTabNavBase","color","updateActiveLink","_element","items","active","MatTabNav","MatTabLink","descendants","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","monitor","rippleDisabled","stopMonitoring","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","imports","exports","declarations","ɵa24","ɵb24"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/node_modules/@angular/material/esm2015/tabs.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, Optional, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] },\n];\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{ selector: '[matTabContent]' },] },\n];\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n            },] },\n];\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] },\n];\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-body-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-group-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-paginated-tab-header'\n            },] },\n];\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-header-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div #tabList class=\\\"mat-tab-list\\\" [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\" role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}\"],\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n            },] },\n];\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-nav-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-links\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}\"],\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: Directive, args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-link-base'\n            },] },\n];\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] },\n];\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                    (/** @type {?} */ (\n                    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                    MatPaginatedTabHeader)),\n                    (/** @type {?} */ (_MatTabGroupBase)),\n                    (/** @type {?} */ (_MatTabNavBase)),\n                    (/** @type {?} */ (_MatTabBodyBase)),\n                    (/** @type {?} */ (_MatTabHeaderBase)),\n                    (/** @type {?} */ (_MatTabLinkBase)),\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTabsModule, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatPaginatedTabHeader as ɵb24 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}