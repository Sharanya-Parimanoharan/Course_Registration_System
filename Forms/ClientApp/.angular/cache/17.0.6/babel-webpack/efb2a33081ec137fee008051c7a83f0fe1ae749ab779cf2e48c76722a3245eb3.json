{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet StudentProfileComponent = class StudentProfileComponent {\n  constructor(serv, datePipe) {\n    this.serv = serv;\n    this.datePipe = datePipe;\n    this.sideNavStatus = false;\n    this.hide = false;\n    this.firstFormGroup = new FormGroup({\n      firstname: new FormControl(\"\", Validators.required),\n      lastname: new FormControl(\"\", Validators.required),\n      email: new FormControl(\"\", Validators.required),\n      nic: new FormControl(\"\", Validators.required),\n      mobile: new FormControl(\"\", Validators.required),\n      member: new FormControl(\"\", Validators.required)\n    });\n    this.secondFormGroup = new FormGroup({\n      pwd: new FormControl(\"\")\n    });\n    this.isLinear = false;\n  }\n  ngOnInit() {\n    this.obj = this.serv.loadCurrentUser();\n    console.log(this.obj.role);\n    this.firstFormGroup.value.firstname = this.obj.firstname;\n    this.firstFormGroup.value.lastname = this.obj.lastname;\n    this.firstFormGroup.value.email = this.obj.email;\n    this.firstFormGroup.value.mobile = this.obj.mobile;\n    this.firstFormGroup.value.nic = this.obj.id;\n    this.firstFormGroup.value.member = this.obj.member;\n  }\n  sendUpdate() {\n    this.originalDate = new Date(this.obj.member);\n    this.formatted = this.datePipe.transform(this.originalDate, 'yyyy-MM-ddTHH:mm:ss.SSSSSSS');\n    this.serv.updateStudent([this.firstFormGroup.value.firstname, this.firstFormGroup.value.lastname, this.firstFormGroup.value.email, this.firstFormGroup.value.nic, this.firstFormGroup.value.mobile, this.formatted, this.secondFormGroup.value.pwd, this.obj.role, this.obj.degree]).subscribe(res => {\n      if (res == 'Success') {\n        alert(\"Updated Successfully !!\");\n      } else {\n        alert(\"Error!!\");\n      }\n    });\n  }\n  cancel() {\n    this.ngOnInit();\n  }\n};\nStudentProfileComponent = __decorate([Component({\n  selector: 'app-student-profile',\n  templateUrl: './student-profile.component.html',\n  styleUrl: './student-profile.component.css'\n})], StudentProfileComponent);\nexport { StudentProfileComponent };","map":{"version":3,"names":["Component","Validators","FormControl","FormGroup","StudentProfileComponent","constructor","serv","datePipe","sideNavStatus","hide","firstFormGroup","firstname","required","lastname","email","nic","mobile","member","secondFormGroup","pwd","isLinear","ngOnInit","obj","loadCurrentUser","console","log","role","value","id","sendUpdate","originalDate","Date","formatted","transform","updateStudent","degree","subscribe","res","alert","cancel","__decorate","selector","templateUrl","styleUrl"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/Profiles/student-profile/student-profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-student-profile',\n  templateUrl: './student-profile.component.html',\n  styleUrl: './student-profile.component.css'\n})\nexport class StudentProfileComponent implements OnInit {\n  obj: any;\n  sideNavStatus: boolean = false;\n  hide = false;\n\n  originalDate: any;\n  formatted: any;\n\n  constructor(private serv: AuthService, private datePipe: DatePipe) { }\n\n  firstFormGroup = new FormGroup({\n    firstname: new FormControl(\"\", Validators.required),\n    lastname: new FormControl(\"\", Validators.required),\n    email: new FormControl(\"\", Validators.required),\n    nic: new FormControl(\"\", Validators.required),\n    mobile: new FormControl(\"\", Validators.required),\n    member: new FormControl(\"\", Validators.required),\n\n\n  });\n\n\n  secondFormGroup = new FormGroup({\n    pwd: new FormControl(\"\")\n  });\n  isLinear = false;\n\n\n  ngOnInit() {\n    this.obj = this.serv.loadCurrentUser();\n    console.log(this.obj.role);\n\n    this.firstFormGroup.value.firstname = this.obj.firstname;\n    this.firstFormGroup.value.lastname = this.obj.lastname;\n    this.firstFormGroup.value.email = this.obj.email;\n    this.firstFormGroup.value.mobile =this. obj.mobile;\n    this.firstFormGroup.value.nic = this.obj.id;\n    this.firstFormGroup.value.member = this.obj.member;\n  }\n\n  sendUpdate() {\n    this.originalDate = new Date(this.obj.member);\n    this.formatted = this.datePipe.transform(this.originalDate, 'yyyy-MM-ddTHH:mm:ss.SSSSSSS');\n    this.serv.updateStudent([\n      this.firstFormGroup.value.firstname,\n      this.firstFormGroup.value.lastname,\n      this.firstFormGroup.value.email,\n      this.firstFormGroup.value.nic,\n      this.firstFormGroup.value.mobile,\n      this.formatted,\n      this.secondFormGroup.value.pwd,\n      this.obj.role,\n      this.obj.degree\n    ]).subscribe(res => {\n      if (res == 'Success') {\n        alert(\"Updated Successfully !!\");\n      }\n      else {\n        alert(\"Error!!\");\n      }\n    });\n  }\n\n  cancel() {\n    this.ngOnInit();\n  }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}