{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nclass MatListBase {}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n  constructor() {\n    super(...arguments);\n    /**\n     * Emits when the state of the list changes.\n     */\n    this._stateChanges = new Subject();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\nMatNavList.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-nav-list',\n    exportAs: 'matNavList',\n    host: {\n      'role': 'navigation',\n      'class': 'mat-nav-list mat-list-base'\n    },\n    template: \"<ng-content></ng-content>\",\n    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n    inputs: ['disableRipple'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\nclass MatList extends _MatListMixinBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    super();\n    this._elementRef = _elementRef;\n    /**\n     * Emits when the state of the list changes.\n     */\n    this._stateChanges = new Subject();\n    if (this._getListType() === 'action-list') {\n      _elementRef.nativeElement.classList.add('mat-action-list');\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _getListType() {\n    /** @type {?} */\n    const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n    if (nodeName === 'mat-list') {\n      return 'list';\n    }\n    if (nodeName === 'mat-action-list') {\n      return 'action-list';\n    }\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\nMatList.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-list, mat-action-list',\n    exportAs: 'matList',\n    template: \"<ng-content></ng-content>\",\n    host: {\n      'class': 'mat-list mat-list-base'\n    },\n    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n    inputs: ['disableRipple'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatList.ctorParameters = () => [{\n  type: ElementRef\n}];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {}\nMatListAvatarCssMatStyler.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-list-avatar], [matListAvatar]',\n    host: {\n      'class': 'mat-list-avatar'\n    }\n  }]\n}];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {}\nMatListIconCssMatStyler.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-list-icon], [matListIcon]',\n    host: {\n      'class': 'mat-list-icon'\n    }\n  }]\n}];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {}\nMatListSubheaderCssMatStyler.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-subheader], [matSubheader]',\n    host: {\n      'class': 'mat-subheader'\n    }\n  }]\n}];\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?=} navList\n   * @param {?=} list\n   */\n  constructor(_element, _changeDetectorRef, navList, list) {\n    super();\n    this._element = _element;\n    this._isInteractiveList = false;\n    this._destroyed = new Subject();\n    this._isInteractiveList = !!(navList || list && list._getListType() === 'action-list');\n    this._list = navList || list;\n    // If no type attributed is specified for <button>, set it to \"button\".\n    // If a type attribute is already specified, do nothing.\n    /** @type {?} */\n    const element = this._getHostElement();\n    if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n      element.setAttribute('type', 'button');\n    }\n    if (this._list) {\n      // React to changes in the state of the parent list since\n      // some of the item's properties depend on it (e.g. `disableRipple`).\n      this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        _changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Whether this list item should show a ripple effect when clicked.\n   * @return {?}\n   */\n  _isRippleDisabled() {\n    return !this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple);\n  }\n  /**\n   * Retrieves the DOM element of the component host.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n}\nMatListItem.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n    exportAs: 'matListItem',\n    host: {\n      'class': 'mat-list-item',\n      // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n      '[class.mat-list-item-avatar]': '_avatar || _icon',\n      '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n    },\n    inputs: ['disableRipple'],\n    template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatListItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: MatNavList,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: MatList,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatListItem.propDecorators = {\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine, {\n      descendants: true\n    }]\n  }],\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler, {\n      static: false\n    }]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler, {\n      static: false\n    }]\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatSelectionList),\n  multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n  /**\n   * @param {?} source\n   * @param {?} option\n   */\n  constructor(source, option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetector\n   * @param {?} selectionList\n   */\n  constructor(_element, _changeDetector, selectionList) {\n    super();\n    this._element = _element;\n    this._changeDetector = _changeDetector;\n    this.selectionList = selectionList;\n    this._selected = false;\n    this._disabled = false;\n    this._hasFocus = false;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     */\n    this.checkboxPosition = 'after';\n  }\n  /**\n   * Theme color of the list option. This sets the color of the checkbox.\n   * @return {?}\n   */\n  get color() {\n    return this._color || this.selectionList.color;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  set color(newValue) {\n    this._color = newValue;\n  }\n  /**\n   * Value of the option\n   * @return {?}\n   */\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  set value(newValue) {\n    if (this.selected && newValue !== this.value) {\n      this.selected = false;\n    }\n    this._value = newValue;\n  }\n  /**\n   * Whether the option is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled || this.selectionList && this.selectionList.disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Whether the option is selected.\n   * @return {?}\n   */\n  get selected() {\n    return this.selectionList.selectedOptions.isSelected(this);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    /** @type {?} */\n    const isSelected = coerceBooleanProperty(value);\n    if (isSelected !== this._selected) {\n      this._setSelected(isSelected);\n      this.selectionList._reportValueChange();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    /** @type {?} */\n    const list = this.selectionList;\n    if (list._value && list._value.some(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    value => list.compareWith(value, this._value))) {\n      this._setSelected(true);\n    }\n    /** @type {?} */\n    const wasSelected = this._selected;\n    // List options that are selected at initialization can't be reported properly to the form\n    // control. This is because it takes some time until the selection-list knows about all\n    // available options. Also it can happen that the ControlValueAccessor has an initial value\n    // that should be used instead. Deferring the value change report to the next tick ensures\n    // that the form control value is not being overwritten.\n    Promise.resolve().then(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (this._selected || wasSelected) {\n        this.selected = true;\n        this._changeDetector.markForCheck();\n      }\n    });\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this.selected) {\n      // We have to delay this until the next tick in order\n      // to avoid changed after checked errors.\n      Promise.resolve().then(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.selected = false;\n      });\n    }\n    /** @type {?} */\n    const hadFocus = this._hasFocus;\n    /** @type {?} */\n    const newActiveItem = this.selectionList._removeOptionFromList(this);\n    // Only move focus if this option was focused at the time it was destroyed.\n    if (hadFocus && newActiveItem) {\n      newActiveItem.focus();\n    }\n  }\n  /**\n   * Toggles the selection state of the option.\n   * @return {?}\n   */\n  toggle() {\n    this.selected = !this.selected;\n  }\n  /**\n   * Allows for programmatic focusing of the option.\n   * @return {?}\n   */\n  focus() {\n    this._element.nativeElement.focus();\n  }\n  /**\n   * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n   * \\@docs-private\n   * @return {?}\n   */\n  getLabel() {\n    return this._text ? this._text.nativeElement.textContent || '' : '';\n  }\n  /**\n   * Whether this list item should show a ripple effect when clicked.\n   * @return {?}\n   */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n  }\n  /**\n   * @return {?}\n   */\n  _handleClick() {\n    if (!this.disabled) {\n      this.toggle();\n      // Emit a change event if the selected state of the option changed through user interaction.\n      this.selectionList._emitChangeEvent(this);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _handleFocus() {\n    this.selectionList._setFocusedOption(this);\n    this._hasFocus = true;\n  }\n  /**\n   * @return {?}\n   */\n  _handleBlur() {\n    this.selectionList._onTouched();\n    this._hasFocus = false;\n  }\n  /**\n   * Retrieves the DOM element of the component host.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  /**\n   * Sets the selected state of the option. Returns whether the value has changed.\n   * @param {?} selected\n   * @return {?}\n   */\n  _setSelected(selected) {\n    if (selected === this._selected) {\n      return false;\n    }\n    this._selected = selected;\n    if (selected) {\n      this.selectionList.selectedOptions.select(this);\n    } else {\n      this.selectionList.selectedOptions.deselect(this);\n    }\n    this._changeDetector.markForCheck();\n    return true;\n  }\n  /**\n   * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n   * used to trigger an update of the list option if the disabled state of the selection list\n   * changed.\n   * @return {?}\n   */\n  _markForCheck() {\n    this._changeDetector.markForCheck();\n  }\n}\nMatListOption.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-list-option',\n    exportAs: 'matListOption',\n    inputs: ['disableRipple'],\n    host: {\n      'role': 'option',\n      'class': 'mat-list-item mat-list-option',\n      '(focus)': '_handleFocus()',\n      '(blur)': '_handleBlur()',\n      '(click)': '_handleClick()',\n      'tabindex': '-1',\n      '[class.mat-list-item-disabled]': 'disabled',\n      '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n      // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n      // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n      // its theme.\n      '[class.mat-primary]': 'color === \"primary\"',\n      // Even though accent is the default, we need to set this class anyway, because the  list might\n      // be placed inside a parent that has one of the other colors with a higher specificity.\n      '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n      '[class.mat-warn]': 'color === \"warn\"',\n      '[attr.aria-selected]': 'selected',\n      '[attr.aria-disabled]': 'disabled'\n    },\n    template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatListOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: MatSelectionList,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatSelectionList)]\n  }]\n}];\nMatListOption.propDecorators = {\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler, {\n      static: false\n    }]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler, {\n      static: false\n    }]\n  }],\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine]\n  }],\n  _text: [{\n    type: ViewChild,\n    args: ['text', {\n      static: false\n    }]\n  }],\n  checkboxPosition: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }]\n};\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n  /**\n   * @param {?} _element\n   * @param {?} tabIndex\n   */\n  constructor(_element, tabIndex) {\n    super();\n    this._element = _element;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     */\n    this.selectionChange = new EventEmitter();\n    /**\n     * Tabindex of the selection list.\n     */\n    this.tabIndex = 0;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     */\n    this.color = 'accent';\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    this.compareWith =\n    /**\n    * @param {?} a1\n    * @param {?} a2\n    * @return {?}\n    */\n    (a1, a2) => a1 === a2;\n    this._disabled = false;\n    /**\n     * The currently selected options.\n     */\n    this.selectedOptions = new SelectionModel(true);\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     */\n    this._onChange =\n    /**\n    * @param {?} _\n    * @return {?}\n    */\n    _ => {};\n    /**\n     * Emits when the list has been destroyed.\n     */\n    this._destroyed = new Subject();\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     */\n    this._onTouched =\n    /**\n    * @return {?}\n    */\n    () => {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n  /**\n   * Whether the selection list is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n    // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n    // changed its state. Since we know that a change to `disabled` property of the list affects\n    // the state of the options, we manually mark each option for check.\n    this._markOptionsForCheck();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this.options).withWrap().withTypeAhead()\n    // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n    // screenreader users, that allows reading the different options of the list.\n    .skipPredicate(\n    /**\n    * @return {?}\n    */\n    () => false).withAllowedModifierKeys(['shiftKey']);\n    if (this._value) {\n      this._setOptionsFromValues(this._value);\n    }\n    // Sync external changes to the model back to the options.\n    this.selectedOptions.onChange.pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      if (event.added) {\n        for (let item of event.added) {\n          item.selected = true;\n        }\n      }\n      if (event.removed) {\n        for (let item of event.removed) {\n          item.selected = false;\n        }\n      }\n    });\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const disableRippleChanges = changes['disableRipple'];\n    /** @type {?} */\n    const colorChanges = changes['color'];\n    if (disableRippleChanges && !disableRippleChanges.firstChange || colorChanges && !colorChanges.firstChange) {\n      this._markOptionsForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._isDestroyed = true;\n  }\n  /**\n   * Focuses the selection list.\n   * @param {?=} options\n   * @return {?}\n   */\n  focus(options) {\n    this._element.nativeElement.focus(options);\n  }\n  /**\n   * Selects all of the options.\n   * @return {?}\n   */\n  selectAll() {\n    this._setAllOptionsSelected(true);\n  }\n  /**\n   * Deselects all of the options.\n   * @return {?}\n   */\n  deselectAll() {\n    this._setAllOptionsSelected(false);\n  }\n  /**\n   * Sets the focused option of the selection-list.\n   * @param {?} option\n   * @return {?}\n   */\n  _setFocusedOption(option) {\n    this._keyManager.updateActiveItem(option);\n  }\n  /**\n   * Removes an option from the selection list and updates the active item.\n   * @param {?} option\n   * @return {?} Currently-active item.\n   */\n  _removeOptionFromList(option) {\n    /** @type {?} */\n    const optionIndex = this._getOptionIndex(option);\n    if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n      // Check whether the option is the last item\n      if (optionIndex > 0) {\n        this._keyManager.updateActiveItem(optionIndex - 1);\n      } else if (optionIndex === 0 && this.options.length > 1) {\n        this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n      }\n    }\n    return this._keyManager.activeItem;\n  }\n  /**\n   * Passes relevant key presses to our key manager.\n   * @param {?} event\n   * @return {?}\n   */\n  _keydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    /** @type {?} */\n    const manager = this._keyManager;\n    /** @type {?} */\n    const previousFocusIndex = manager.activeItemIndex;\n    /** @type {?} */\n    const hasModifier = hasModifierKey(event);\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        if (!hasModifier) {\n          this._toggleFocusedOption();\n          // Always prevent space from scrolling the page since the list has focus\n          event.preventDefault();\n        }\n        break;\n      case HOME:\n      case END:\n        if (!hasModifier) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n        break;\n      case A:\n        if (hasModifierKey(event, 'ctrlKey')) {\n          this.options.find(\n          /**\n          * @param {?} option\n          * @return {?}\n          */\n          option => !option.selected) ? this.selectAll() : this.deselectAll();\n          event.preventDefault();\n        }\n        break;\n      default:\n        manager.onKeydown(event);\n    }\n    if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey && manager.activeItemIndex !== previousFocusIndex) {\n      this._toggleFocusedOption();\n    }\n  }\n  /**\n   * Reports a value change to the ControlValueAccessor\n   * @return {?}\n   */\n  _reportValueChange() {\n    // Stop reporting value changes after the list has been destroyed. This avoids\n    // cases where the list might wrongly reset its value once it is removed, but\n    // the form control is still live.\n    if (this.options && !this._isDestroyed) {\n      /** @type {?} */\n      const value = this._getSelectedOptionValues();\n      this._onChange(value);\n      this._value = value;\n    }\n  }\n  /**\n   * Emits a change event if the selected state of an option changed.\n   * @param {?} option\n   * @return {?}\n   */\n  _emitChangeEvent(option) {\n    this.selectionChange.emit(new MatSelectionListChange(this, option));\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} values\n   * @return {?}\n   */\n  writeValue(values) {\n    this._value = values;\n    if (this.options) {\n      this._setOptionsFromValues(values || []);\n    }\n  }\n  /**\n   * Implemented as a part of ControlValueAccessor.\n   * @param {?} isDisabled\n   * @return {?}\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Sets the selected options based on the specified values.\n   * @private\n   * @param {?} values\n   * @return {?}\n   */\n  _setOptionsFromValues(values) {\n    this.options.forEach(\n    /**\n    * @param {?} option\n    * @return {?}\n    */\n    option => option._setSelected(false));\n    values.forEach(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    value => {\n      /** @type {?} */\n      const correspondingOption = this.options.find(\n      /**\n      * @param {?} option\n      * @return {?}\n      */\n      option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        return option.selected ? false : this.compareWith(option.value, value);\n      });\n      if (correspondingOption) {\n        correspondingOption._setSelected(true);\n      }\n    });\n  }\n  /**\n   * Returns the values of the selected options.\n   * @private\n   * @return {?}\n   */\n  _getSelectedOptionValues() {\n    return this.options.filter(\n    /**\n    * @param {?} option\n    * @return {?}\n    */\n    option => option.selected).map(\n    /**\n    * @param {?} option\n    * @return {?}\n    */\n    option => option.value);\n  }\n  /**\n   * Toggles the state of the currently focused option if enabled.\n   * @private\n   * @return {?}\n   */\n  _toggleFocusedOption() {\n    /** @type {?} */\n    let focusedIndex = this._keyManager.activeItemIndex;\n    if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n      /** @type {?} */\n      let focusedOption = this.options.toArray()[focusedIndex];\n      if (focusedOption && !focusedOption.disabled) {\n        focusedOption.toggle();\n        // Emit a change event because the focused option changed its state through user\n        // interaction.\n        this._emitChangeEvent(focusedOption);\n      }\n    }\n  }\n  /**\n   * Sets the selected state on all of the options\n   * and emits an event if anything changed.\n   * @private\n   * @param {?} isSelected\n   * @return {?}\n   */\n  _setAllOptionsSelected(isSelected) {\n    // Keep track of whether anything changed, because we only want to\n    // emit the changed event when something actually changed.\n    /** @type {?} */\n    let hasChanged = false;\n    this.options.forEach(\n    /**\n    * @param {?} option\n    * @return {?}\n    */\n    option => {\n      if (option._setSelected(isSelected)) {\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      this._reportValueChange();\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   * @private\n   * @param {?} index The index to be checked.\n   * @return {?} True if the index is valid for our list of options.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this.options.length;\n  }\n  /**\n   * Returns the index of the specified list option.\n   * @private\n   * @param {?} option\n   * @return {?}\n   */\n  _getOptionIndex(option) {\n    return this.options.toArray().indexOf(option);\n  }\n  /**\n   * Marks all the options to be checked in the next change detection run.\n   * @private\n   * @return {?}\n   */\n  _markOptionsForCheck() {\n    if (this.options) {\n      this.options.forEach(\n      /**\n      * @param {?} option\n      * @return {?}\n      */\n      option => option._markForCheck());\n    }\n  }\n}\nMatSelectionList.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-selection-list',\n    exportAs: 'matSelectionList',\n    inputs: ['disableRipple'],\n    host: {\n      'role': 'listbox',\n      '[tabIndex]': 'tabIndex',\n      'class': 'mat-selection-list mat-list-base',\n      '(blur)': '_onTouched()',\n      '(keydown)': '_keydown($event)',\n      'aria-multiselectable': 'true',\n      '[attr.aria-disabled]': 'disabled.toString()'\n    },\n    template: '<ng-content></ng-content>',\n    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n    encapsulation: ViewEncapsulation.None,\n    providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush\n  }]\n}];\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}];\nMatSelectionList.propDecorators = {\n  options: [{\n    type: ContentChildren,\n    args: [MatListOption, {\n      descendants: true\n    }]\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  compareWith: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {}\nMatListModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n    exports: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule],\n    declarations: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };","map":{"version":3,"names":["ChangeDetectionStrategy","Component","ContentChild","ContentChildren","Directive","ElementRef","Optional","ViewEncapsulation","ChangeDetectorRef","Attribute","EventEmitter","forwardRef","Inject","Input","Output","ViewChild","NgModule","MatLine","setLines","mixinDisableRipple","MatCommonModule","MatLineModule","MatPseudoCheckboxModule","MatRippleModule","Subject","takeUntil","FocusKeyManager","coerceBooleanProperty","SelectionModel","SPACE","ENTER","HOME","END","UP_ARROW","DOWN_ARROW","A","hasModifierKey","NG_VALUE_ACCESSOR","CommonModule","MatDividerModule","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","constructor","arguments","_stateChanges","ngOnChanges","next","ngOnDestroy","complete","decorators","type","args","selector","exportAs","host","template","styles","inputs","encapsulation","None","changeDetection","OnPush","MatList","_elementRef","_getListType","nativeElement","classList","add","nodeName","toLowerCase","ctorParameters","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","subscribe","markForCheck","ngAfterContentInit","_lines","_isRippleDisabled","disableRipple","propDecorators","descendants","_avatar","static","_icon","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","useExisting","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_disabled","_hasFocus","checkboxPosition","color","_color","newValue","value","_value","selected","disabled","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","some","compareWith","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","tabIndex","selectionChange","a1","a2","_onChange","_","parseInt","_markOptionsForCheck","_keyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","onChange","event","added","item","removed","changes","disableRippleChanges","colorChanges","firstChange","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","length","Math","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","_toggleFocusedOption","preventDefault","setFirstItemActive","setLastItemActive","find","onKeydown","shiftKey","_getSelectedOptionValues","emit","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","forEach","correspondingOption","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","hasChanged","index","indexOf","providers","String","MatListModule","imports","exports","declarations"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/node_modules/@angular/material/esm2015/list.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, ViewEncapsulation, ChangeDetectorRef, Attribute, EventEmitter, forwardRef, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, MatCommonModule, MatLineModule, MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.decorators = [\n    { type: Component, args: [{selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\",\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.decorators = [\n    { type: Component, args: [{selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                inputs: ['disableRipple'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            },] },\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            },] },\n];\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.decorators = [\n    { type: Component, args: [{selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\"><div class=\\\"mat-list-item-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content><div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div><ng-content></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.decorators = [\n    { type: Component, args: [{selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    'tabindex': '-1',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\"><div mat-ripple class=\\\"mat-list-item-ripple\\\" [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div><mat-pseudo-checkbox [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div><ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\"></ng-content></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }],\n    _lines: [{ type: ContentChildren, args: [MatLine,] }],\n    _text: [{ type: ViewChild, args: ['text', { static: false },] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     */\n    constructor(_element, tabIndex) {\n        super();\n        this._element = _element;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(true);\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.onChange.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            case A:\n                if (hasModifierKey(event, 'ctrlKey')) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n}\nMatSelectionList.decorators = [\n    { type: Component, args: [{selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    '[tabIndex]': 'tabIndex',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    'aria-multiselectable': 'true',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                },\n                template: '<ng-content></ng-content>',\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:0}mat-action-list button{background:0 0;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:0}@media (-ms-high-contrast:active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover,mat-action-list .mat-list-item:focus,mat-action-list .mat-list-item:hover{outline:dotted 1px}}@media (hover:none){.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover{background:0 0}}\"],\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatListModule, MatNavList, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatSelectionListChange, MatListOption, MatSelectionList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}