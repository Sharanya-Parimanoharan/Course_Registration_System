{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/reset-password.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction PasswordResetComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Invalid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PasswordResetComponent {\n  ngOnInit() {}\n  constructor(authService, router, resetserv) {\n    this.authService = authService;\n    this.router = router;\n    this.resetserv = resetserv;\n    this.isUserValid = false;\n    this.resetPasswd = new FormGroup({\n      pwd: new FormControl('', [Validators.required]),\n      rpwd: new FormControl('', [Validators.required])\n    });\n  }\n  get rpwd() {\n    return this.resetPasswd.get(\"rpwd\");\n  }\n  get pwd() {\n    return this.resetPasswd.get(\"pwd\");\n  }\n  loginSubmit() {\n    this.authService.loginStudent([this.resetPasswd.value.pwd]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n      } else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        this.ress = this.authService.loadCurrentUser();\n        if (this.ress.role == \"Admin\") {\n          this.router.navigateByUrl('/signin/courses');\n        }\n      }\n    });\n  }\n  confirm() {\n    console.log(this.resetPassword);\n    this.resetserv.sendResetpasswordLink(this.resetPassword).subscribe({\n      next: res => {\n        alert(\"Success\");\n        this.resetPassword = \"\";\n        const btn = document.getElementById(\"closebtn\");\n        btn.dispatchEvent(new Event('click'));\n      },\n      error: err => {\n        alert(\"error\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function PasswordResetComponent_Factory(t) {\n    return new (t || PasswordResetComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ResetPasswordService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordResetComponent,\n    selectors: [[\"app-password-reset\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[1, \"border\", \"p-3\", \"rounded-3\", \"perfect-centering\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"col\", \"mb-3\"], [\"for\", \"pwd\", 1, \"form=label\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"pwd\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"rpwd\", 1, \"form=label\"], [\"type\", \"password\", \"id\", \"rpwd\", \"formControlName\", \"rpwd\", 1, \"form-control\"], [1, \"form-text\", \"text-danger\"], [1, \"row\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function PasswordResetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PasswordResetComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.loginSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Password Reset\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, PasswordResetComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"div\", 4)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵtext(17, \" Password Required \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"div\", 12)(20, \"div\", 13)(21, \"button\", 14);\n        i0.ɵɵtext(22, \"Reset \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.resetPasswd);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"required\"]) && (ctx.pwd.dirty || ctx.pwd.touched));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", ctx.resetPasswd.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n  width: 500px;\\n}\\n\\ninput.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: red 1px solid;\\n}\\n\\n.perfect-centering[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%,-50%);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULCtCQUErQjtBQUNqQyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICB3aWR0aDogNTAwcHg7XG59XG5cbmlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XG4gIGJvcmRlcjogcmVkIDFweCBzb2xpZDtcbn1cblxuLnBlcmZlY3QtY2VudGVyaW5nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PasswordResetComponent","ngOnInit","constructor","authService","router","resetserv","isUserValid","resetPasswd","pwd","required","rpwd","get","loginSubmit","loginStudent","value","subscribe","res","alert","setToken","ress","loadCurrentUser","role","navigateByUrl","confirm","console","log","resetPassword","sendResetpasswordLink","next","btn","document","getElementById","dispatchEvent","Event","error","err","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","ResetPasswordService","_2","selectors","decls","vars","consts","template","PasswordResetComponent_Template","rf","ctx","ɵɵlistener","PasswordResetComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","PasswordResetComponent_div_10_Template","ɵɵproperty","ɵɵadvance","errors","dirty","touched","invalid"],"sources":["/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/password-reset/password-reset.component.ts","/Users/sharanyaparimanoharan/Projects/Forms/Forms/ClientApp/src/app/password-reset/password-reset.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { ResetPasswordService } from '../services/reset-password.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n\n  isUserValid: boolean = false;\n  ress: any;\n  resetPassword: string;\n  isValid: boolean;\n\n  ngOnInit() {\n\n  }\n  constructor(private authService: AuthService, private router: Router, private resetserv: ResetPasswordService) { }\n\n  resetPasswd = new FormGroup({\n    pwd: new FormControl('', [Validators.required]),\n    rpwd: new FormControl('', [Validators.required])\n  });\n\n  get rpwd() {\n    return this.resetPasswd.get(\"rpwd\");\n  }\n\n  get pwd() {\n    return this.resetPasswd.get(\"pwd\");\n  }\n\n\n\n  loginSubmit() {\n    this.authService.loginStudent([\n      this.resetPasswd.value.pwd\n    ]).subscribe(res => {\n      if (res == \"Failure\") {\n        this.isUserValid = false;\n        alert(\"Login unsuccessful\");\n\n      }\n      else {\n        this.isUserValid = true;\n        this.authService.setToken(res);\n        this.ress = this.authService.loadCurrentUser();\n        if (this.ress.role == \"Admin\") {\n          this.router.navigateByUrl('/signin/courses');\n        }\n      }\n    });\n\n  }\n\n\n\n  confirm() {\n    console.log(this.resetPassword);\n\n    this.resetserv.sendResetpasswordLink(this.resetPassword)\n      .subscribe({\n        next: (res) => {\n          alert(\"Success\");\n          this.resetPassword = \"\";\n          const btn = document.getElementById(\"closebtn\");\n          btn.dispatchEvent(new Event('click'));\n        },\n        error: (err) => {\n          alert(\"error\");\n        }\n      });\n  }\n}\n\n\n","    <form class=\"border p-3 rounded-3 perfect-centering\" [formGroup]=\"resetPasswd\" (ngSubmit)=\"loginSubmit()\">\n        <div class=\"row g-0\">\n            <div class=\"col text-center p-2 mb-3 bg-light\">\n                <span class=\"fs-3\">Password Reset</span>\n            </div>\n        </div>\n        <div class=\"row g-0\">\n            <div class=\"col mb-3\">\n                <label for=\"pwd\" class=\"form=label\">New Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"pwd\" formControlName=\"pwd\" />\n                <div class=\"form-text text-danger\" *ngIf=\"pwd.errors?.['required'] && (pwd.dirty || pwd.touched)\">\n                    Invalid Email\n                </div>\n            </div>\n        </div>\n        <div class=\"row g-0\">\n            <div class=\"col mb-3\">\n                <label for=\"rpwd\" class=\"form=label\">Confirm Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"rpwd\" formControlName=\"rpwd\" />\n                <div class=\"form-text text-danger\">\n                    Password Required\n                </div>\n            </div>\n        </div>\n\n\n\n        <div class=\"row\">\n            <div class=\"col-6 offset-3\">\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"resetPasswd.invalid\">Reset </button>\n                </div>\n            </div>\n        </div>\n    </form>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}